{"version":3,"sources":["config/index.js","redux/actions/auth.js","redux/reducers/auth.js","redux/reducers/index.js","redux/store/index.js","components/Home/components/UserCard/components/Card/index.js","helpers/index.js","components/Home/components/UserCard/components/EditCard/index.js","components/Home/components/UserCard/index.js","components/Home/components/UserCardSkeleton/index.js","components/Home/components/UserGroupCard/index.js","queries/index.js","components/Home/components/AddUser/index.js","components/Home/index.js","components/Header/index.js","components/Autorizations/GitHub/index.js","components/Autorizations/WebAuthn/index.js","components/Autorizations/index.js","components/Registration/index.js","components/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["API_ENDPOINT","loading","payload","type","error","authSuccess","logIn","email","password","dispatch","axios","post","withCredentials","then","data","client","registration","name","webAuthn","a","get","reducer","state","action","undefined","reducers","combineReducers","auth","store","createStore","applyMiddleware","thunk","ExpandBody","styled","display","marginLeft","marginTop","Card","deleteItem","showCard","showMoreInfo","setStore","useEffect","setTimeout","Fade","in","Paper","Box","p","Grid","container","justify","alignItems","item","direction","mr","IconButton","size","onClick","spacing","edit","fontSize","Collapse","emailRegex","validateEmail","test","TextField","Field","theme","smallScreenWidth","breakpoints","down","width","EditCard","defaultName","defaulEmail","updateItem","useState","setName","setEmail","nameError","emailError","setErrors","value","onChange","target","prev","label","validate","UserCard","rest","set","toSet","UserCardSkeleton","opacity","style","Skeleton","variant","height","UserGroupCard","users","Array","fill","map","i","xs","key","length","user","id","Typography","CREATER_USER","gql","getOpts","limit","GET_USERS","DELETE_USER","UPDATE_USER","AddIconWrapper","position","bottom","right","defaultState","AddUser","defaultShow","setShow","useMutation","update","cache","createdUser","createUser","readQuery","query","variables","writeQuery","concat","nameInputRef","useRef","current","focus","setShowCard","flag","Fab","color","required","inputRef","Wrapper","overflowY","flex","connect","useQuery","refetch","deletedUser","deleteUser","filter","updateUser","_id","pt","mb","to","Container","maxWidth","mt","webAuthClient","Client","pathPrefix","WhiteIconButton","NavButton","Button","minHeight","textTransform","borderRadius","ToolbarGrid","forgetClient","AppBar","Toolbar","disableGutters","Promise","all","logout","AuthIconButton","active","palette","primary","main","LayoutGrid","children","props","React","Children","child","GitHub","setAuthControls","element","href","e","stopPropagation","FullWidthTextField","Login","webAuthnAction","onCancel","emailInputRef","login","username","alert","Registration","register","WebAuthn","component","Tooltip","title","itemProps","onSelect","cloneElement","Autorizations","setValue","RegistratoinContainer","TitleTypography","marginBottom","NoDecorationLink","Link","textDecoration","registrationAction","passwordError","authControls","logInAction","ProgressWrapper","justifyContent","initAuth","CircularProgress","className","exact","path","Boolean","window","location","hostname","match","ApolloClient","uri","credentials","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b146bc24.chunk.js","sourcesContent":["export const TOKEN_STORAGE_KEY = 'token';\nexport const API_ENDPOINT = 'https://ruvodtest.herokuapp.com';\nexport const GITHUB_CLIENT_ID = 'ee99345152f8eba1dfc0';\nexport const ROUTING_SUBPATH = '/ruvod-test';\n","import axios from 'axios';\nimport { API_ENDPOINT } from '../../config';\n\nexport const LOADING = 'LOADING';\nexport const AUTH_SUCCESS = 'AUTH';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const FORGET_CLIENT = 'FORGET_CLIENT';\n\nconst loading = (payload) => ({\n  type: LOADING,\n  payload\n});\n\nconst error = (payload) => ({\n  type: AUTH_ERROR,\n  payload\n});\n\nconst authSuccess = (payload) => ({\n  type: AUTH_SUCCESS,\n  payload\n});\n\nexport const forgetClient = () => ({\n  type: FORGET_CLIENT,\n});\n\nexport const auth = () => {\n  return async (dispatch) => {\n    dispatch(loading(true));\n    try {\n      const { data: client } = await axios.get(`${API_ENDPOINT}/auth`, {\n        withCredentials: true\n      });\n\n      dispatch(authSuccess(client));\n    } catch (e) {\n      dispatch(error(true));\n    }\n  };\n};\n\nexport const logIn = ({ email, password }) => {\n  return (dispatch) => {\n    return axios.post(`${API_ENDPOINT}/auth`, { email, password }, {\n      withCredentials: true\n    })\n      .then(({ data }) => {\n        dispatch(authSuccess(data.client));\n      });\n  };\n};\n\nexport const registration = ({ email, password, name }) => {\n  return (dispatch) => {\n    return axios.post(`${API_ENDPOINT}/createClient`, { email, password, name }, {\n      withCredentials: true\n    })\n      .then(({ data }) => {\n        dispatch(authSuccess(data.client));\n      });\n  };\n};\n\nexport const initAuth = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(loading(true));\n\n      const { data: client } = await axios.get(`${API_ENDPOINT}/auth`, {\n        withCredentials: true\n      });\n\n      dispatch(authSuccess(client));\n    } catch (e) {\n      dispatch(error(true));\n    }\n  };\n};\n\nexport const webAuthn = () => {\n  return async (dispatch) => {\n    const { data: { client } } = await axios.get(`${API_ENDPOINT}/auth/webauthn`, {\n      withCredentials: true\n    });\n\n    dispatch(authSuccess(client));\n  };\n};\n","import { LOADING, AUTH_SUCCESS, AUTH_ERROR, FORGET_CLIENT } from '../actions/auth';\n\nconst reducer = (state = { loading: true }, action) => {\n  switch (action.type) {\n    case LOADING: {\n      return { ...state, loading: action.payload, error: false };\n    }\n    case AUTH_SUCCESS: {\n      return { ...state, client: action.payload, loading: false, error: false };\n    }\n    case AUTH_ERROR: {\n      return { ...state, error: action.payload, loading: false };\n    }\n    case FORGET_CLIENT: {\n      return { ...state, client: undefined };\n    }\n    default: return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nconst reducers = combineReducers({ auth });\n\nexport default reducers;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from '../reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;\n","import React, { useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Collapse from '@material-ui/core/Collapse';\nimport Fade from '@material-ui/core/Fade';\nimport { styled } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\nconst ExpandBody = styled('div')({\n  display: 'flex',\n  marginLeft: '46px',\n  marginTop: '8px'\n});\n\nconst Card = ({ name, email, deleteItem, showCard, showMoreInfo, setStore }) => {\n  useEffect(() => {\n    setTimeout(() => setStore({ showCard: true }), 100);\n  }, []);\n\n  return (\n    <Fade in={showCard}>\n      <Paper>\n        <Box p={2}>\n          <Grid container justify='space-between' alignItems='center'>\n            <Grid item>\n              <Grid container alignItems='center' direction='row'>\n                <Box mr={2}>\n                  <IconButton size='small' onClick={() => setStore({ showMoreInfo: !showMoreInfo })}>\n                    {showMoreInfo\n                      ? <ExpandLessIcon />\n                      : <ExpandMoreIcon />}\n                  </IconButton>\n                </Box>\n                <Grid item>\n                  <Grid container direction='row' alignItems='center' spacing={1}>\n                    <Grid item>\n                      Name:\n                    </Grid>\n                    <Grid item>\n                      {name}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Grid container direction='row' spacing={2}>\n                <Grid item>\n                  <IconButton\n                    size='small'\n                    onClick={() => {\n                      setStore({ edit: true });\n                    }}\n                  >\n                    <EditIcon fontSize='small' />\n                  </IconButton>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    size='small'\n                    onClick={() => {\n                      setStore({ showCard: false });\n                      deleteItem();\n                    }}\n                  >\n                    <DeleteIcon fontSize='small' />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Collapse in={showMoreInfo}>\n            <ExpandBody>\n              <Grid container direction='row' alignItems='center' spacing={1}>\n                <Grid item>\n                  User email:\n                </Grid>\n                <Grid item>\n                  {email}\n                </Grid>\n              </Grid>\n            </ExpandBody>\n          </Collapse>\n        </Box>\n      </Paper>\n    </Fade>\n  );\n};\n\nexport default Card;\n","const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; //eslint-disable-line\n\nconst validateEmail = (email) => {\n  return emailRegex.test(email);\n};\n\nexport {\n  validateEmail\n};\n","import React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Collapse from '@material-ui/core/Collapse';\nimport Fade from '@material-ui/core/Fade';\nimport { styled } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Field from '@material-ui/core/TextField';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { validateEmail } from '../../../../../../helpers';\n\nconst ExpandBody = styled('div')({\n  display: 'flex',\n  marginLeft: '46px',\n  marginTop: '10px'\n});\n\nconst TextField = styled(Field)(({ theme, smallScreenWidth }) => ({\n  [theme.breakpoints.down('xs')]: {\n    width: smallScreenWidth\n  },\n}));\n\nconst EditCard = ({ name: defaultName, email: defaulEmail, showMoreInfo, showCard, setStore, updateItem }) => {\n  const [name, setName] = useState(defaultName);\n  const [email, setEmail] = useState(defaulEmail);\n  const [{ name: nameError, email: emailError }, setErrors] = useState({});\n\n  const validate = () => {\n    let error;\n\n    if (!name) {\n      error = true;\n      setErrors((prev) => ({ ...prev, name: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  return (\n    <Fade in={showCard}>\n      <Paper>\n        <Box p={2}>\n          <Grid container justify='space-between' alignItems='center'>\n            <Grid item>\n              <Grid container alignItems='center'>\n                <Box mr={2}>\n                  <IconButton size='small' onClick={() => setStore({ showMoreInfo: !showMoreInfo })}>\n                    {showMoreInfo\n                      ? <ExpandLessIcon />\n                      : <ExpandMoreIcon />}\n                  </IconButton>\n                </Box>\n                <Grid item>\n                  <Grid container direction='row' alignItems='center' spacing={1}>\n                    <Grid item>\n                      Name:\n                    </Grid>\n                    <Grid item>\n                      <TextField\n                        smallScreenWidth='90px'\n                        value={name}\n                        onChange={({ target: { value } }) => {\n                          setName(value);\n                          setErrors((prev) => ({ ...prev, name: null }));\n                        }}\n                        error={nameError?.error}\n                      />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Grid container direction='row' spacing={2}>\n                <Grid item>\n                  <IconButton\n                    size='small'\n                    onClick={() => {\n                      setStore({ edit: false });\n                    }}\n                  >\n                    <ClearIcon fontSize='small' />\n                  </IconButton>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    size='small'\n                    onClick={() => {\n                      if (validate()) {\n                        setStore({ name, email, edit: false });\n                        updateItem({ name, email });\n                      }\n                    }}\n                  >\n                    <CheckIcon fontSize='small' />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Collapse in={showMoreInfo}>\n            <ExpandBody>\n              <Grid container direction='row' alignItems='center' spacing={1}>\n                <Grid item>\n                  User email:\n                </Grid>\n                <Grid item>\n                  <TextField\n                    smallScreenWidth='140px'\n                    value={email}\n                    onChange={({ target: { value } }) => {\n                      setEmail(value);\n                      setErrors((prev) => ({ ...prev, email: null }));\n                    }}\n                    error={emailError?.error}\n                  />\n                </Grid>\n              </Grid>\n            </ExpandBody>\n          </Collapse>\n        </Box>\n      </Paper>\n    </Fade>\n  );\n};\n\nexport default EditCard;\n","import React, { useState } from 'react';\nimport { Card, EditCard } from './components';\n\nconst UserCard = ({ deleteItem, updateItem, ...rest }) => {\n  const [store, setStore] = useState({ ...rest });\n  const { edit } = store;\n\n  const set = (toSet = {}) => setStore({ ...store, ...toSet });\n\n  return (\n    <>\n      {!edit\n        ? <Card {...store} setStore={set} deleteItem={deleteItem} />\n        : <EditCard {...store} setStore={set} updateItem={updateItem} />}\n    </>\n  );\n};\n\nexport default UserCard;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\nconst defaultHeight = 30;\n\nconst UserCardSkeleton = ({ opacity = 1 }) => {\n  return (\n    <Paper style={{ opacity }}>\n      <Box p={2}>\n        <Grid container justify='space-between' alignItems='center'>\n          <Grid item>\n            <Grid container alignItems='center' direction='row'>\n              <Box mr={4} />\n              <Grid item>\n                <Grid container direction='row' alignItems='center' spacing={1}>\n                  <Grid item>\n                    <Skeleton variant='text' height={defaultHeight} width={45} />\n                  </Grid>\n                  <Grid item>\n                    <Skeleton variant='text' height={defaultHeight} width={145} />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container direction='row' spacing={2}>\n              <Grid item>\n                <Skeleton variant='text' height={defaultHeight} width={18} />\n              </Grid>\n              <Grid item>\n                <Skeleton variant='text' height={defaultHeight} width={18} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default UserCardSkeleton;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport UserCard from '../UserCard';\nimport UserCardSkeleton from '../UserCardSkeleton';\nimport Typography from '@material-ui/core/Typography';\n\nconst UserGroupCard = ({ loading, users = [], deleteItem, updateItem }) => {\n  return (\n    <>\n      {!loading ? (\n        <>\n          {users.length ? (\n            <Grid container spacing={3}>\n              {users.map((user) => (\n                <Grid item xs={12} key={user.id}>\n                  <UserCard\n                    {...user}\n                    deleteItem={() => deleteItem(user.id)}\n                    updateItem={(toSet) => updateItem(user.id, toSet)}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Typography>\n              Users list is empty\n            </Typography>\n          )}\n        </>\n      )\n        : (\n          <Grid container spacing={3}>\n            {Array(6).fill(null).map((a, i) => (\n              <Grid item xs={12} key={i}>\n                <UserCardSkeleton opacity={1 - (i * 1.5) / 10} />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n    </>\n  );\n};\n\nexport default UserGroupCard;\n","import { gql } from 'apollo-boost';\n\nconst CREATER_USER = gql`\n  mutation createUser($user: CreateUserInput!) {\n    createUser(input: $user) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst getOpts = { limit: 100 };\n\nconst GET_USERS = gql`\n  query getUsers($skip: Int, $limit: Int) {\n    users(skip: $skip, limit: $limit) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst DELETE_USER = gql`\n  mutation deleteUser($id: ID!) {\n    deleteUser(id: $id) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst UPDATE_USER = gql`\n  mutation updateUser($id: ID!, $user: UpdateUserInput!) {\n    updateUser(id: $id, input: $user) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nexport {\n  CREATER_USER,\n  GET_USERS,\n  DELETE_USER,\n  UPDATE_USER,\n  getOpts\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport Paper from '@material-ui/core/Paper';\nimport Fade from '@material-ui/core/Fade';\nimport { styled } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Field from '@material-ui/core/TextField';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport { CREATER_USER, GET_USERS, getOpts } from '../../../../queries';\nimport { validateEmail } from '../../../../helpers';\n\nconst ExpandBody = styled('div')({\n  display: 'flex',\n  marginLeft: '16px',\n  marginTop: '10px'\n});\n\nconst AddIconWrapper = styled('div')({\n  position: 'fixed',\n  bottom: '15vh',\n  right: '20vw'\n});\n\nconst TextField = styled(Field)(({ theme, smallScreenWidth }) => ({\n  [theme.breakpoints.down('xs')]: {\n    width: smallScreenWidth\n  },\n}));\n\nconst defaultState = { name: '', email: '' };\n\nconst AddUser = ({ defaultShow }) => {\n  const [showCard, setShow] = useState(defaultShow);\n  const [store, setStore] = useState(defaultState);\n  const { name, email } = store;\n  const [createUser] = useMutation(CREATER_USER, {\n    update(cache, { data: { createUser: createdUser } }) {\n      const { users } = cache.readQuery({ query: GET_USERS, variables: getOpts });\n      cache.writeQuery({\n        query: GET_USERS,\n        data: { users: users.concat(createdUser) },\n        variables: getOpts\n      });\n    }\n  });\n  const nameInputRef = useRef();\n  const [{ name: nameError, email: emailError }, setErrors] = useState({});\n\n  useEffect(() => {\n    if (showCard && nameInputRef?.current) {\n      nameInputRef.current.focus();\n    }\n  }, [showCard]);\n\n  const validate = () => {\n    let error;\n\n    if (!name) {\n      error = true;\n      setErrors((prev) => ({ ...prev, name: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  const setShowCard = (flag) => {\n    setShow(flag);\n    if (!flag) {\n      setStore(defaultState);\n      setErrors({});\n    }\n  };\n\n  return (\n    <>\n      <AddIconWrapper>\n        <Fab color='primary' onClick={() => setShowCard(!showCard)}>\n          {showCard ? <ClearIcon /> : <AddIcon />}\n        </Fab>\n      </AddIconWrapper>\n      <Fade in={showCard}>\n        <Paper>\n          <Box p={2}>\n            <Grid container justify='space-between' alignItems='center'>\n              <Grid item>\n                <Grid container alignItems='center'>\n                  <Box mr={2} />\n                  <Grid item>\n                    <Grid container direction='row' alignItems='center' spacing={1}>\n                      <Grid item>\n                        Name:\n                      </Grid>\n                      <Grid item>\n                        <TextField\n                          smallScreenWidth='100px'\n                          required\n                          value={name}\n                          onChange={({ target: { value } }) => {\n                            setStore({ ...store, name: value });\n                            setErrors((prev) => ({ ...prev, name: null }));\n                          }}\n                          inputRef={nameInputRef}\n                          error={nameError?.error}\n                        />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container direction='row' spacing={2}>\n                  <Grid item>\n                    <IconButton\n                      size='small'\n                      onClick={() => {\n                        setShowCard(false);\n                      }}\n                    >\n                      <ClearIcon fontSize='small' />\n                    </IconButton>\n                  </Grid>\n                  <Grid item>\n                    <IconButton\n                      size='small'\n                      onClick={() => {\n                        if (validate()) {\n                          setShowCard(false);\n                          createUser({ variables: { user: { name, email } } });\n                        }\n                      }}\n                    >\n                      <CheckIcon fontSize='small' />\n                    </IconButton>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <ExpandBody>\n              <Grid container direction='row' alignItems='center' spacing={1}>\n                <Grid item>\n                  User email:\n                </Grid>\n                <Grid item>\n                  <TextField\n                    smallScreenWidth='150px'\n                    required\n                    value={email}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, email: value });\n                      setErrors((prev) => ({ ...prev, email: null }));\n                    }}\n                    error={emailError?.error}\n                  />\n                </Grid>\n              </Grid>\n            </ExpandBody>\n          </Box>\n        </Paper>\n      </Fade>\n    </>\n  );\n};\n\nexport default AddUser;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { styled } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport { UserGroupCard, AddUser } from './components';\nimport { GET_USERS, DELETE_USER, UPDATE_USER, getOpts } from '../../queries';\nimport { Redirect } from 'react-router-dom';\nimport { ROUTING_SUBPATH } from '../../config';\n\nconst Wrapper = styled(Box)({\n  overflowY: 'scroll',\n  display: 'flex',\n  flex: '1'\n});\n\nconst Home = ({ client }) => {\n  const { loading, data, refetch } = useQuery(GET_USERS, { variables: getOpts });\n  const [deleteUser] = useMutation(DELETE_USER, {\n    update(cache, { data: { deleteUser: deletedUser } }) {\n      const { users } = cache.readQuery({ query: GET_USERS, variables: getOpts });\n      cache.writeQuery({\n        query: GET_USERS,\n        data: { users: users.filter(({ id }) => id !== deletedUser?.id) },\n        variables: getOpts\n      });\n    }\n  });\n  const [updateUser] = useMutation(UPDATE_USER);\n\n  useEffect(() => {\n    if (client?._id) {\n      refetch({ variables: getOpts });\n    }\n  }, [client?._id]);\n\n  return (\n    <Wrapper pt={2} mb={2}>\n      {!client ? <Redirect to={`${ROUTING_SUBPATH}/login`} /> : null}\n      <Container maxWidth='sm'>\n        <UserGroupCard\n          users={data?.users}\n          loading={loading}\n          deleteItem={(id) => deleteUser({ variables: { id } })}\n          updateItem={(id, user = {}) => updateUser({ variables: { id, user } })}\n        />\n        <Box mt={3}>\n          <AddUser />\n        </Box>\n      </Container>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = ({ auth }) => ({\n  client: auth.client,\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { forgetClient as forgetClientAction } from '../../redux/actions/auth';\nimport { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { API_ENDPOINT, ROUTING_SUBPATH } from '../../config';\nimport axios from 'axios';\nimport Client from 'webauthn/client';\n\nconst webAuthClient = new Client({ pathPrefix: `${API_ENDPOINT}/webauthn` });\n\nconst WhiteIconButton = styled(IconButton)({\n  color: '#FFF',\n});\n\nconst NavButton = styled(Button)({\n  color: '#FFF',\n  minHeight: '64px',\n  textTransform: 'none',\n  borderRadius: 0,\n  fontSize: '16px'\n});\n\nconst ToolbarGrid = styled(Grid)({\n  minHeight: '64px'\n});\n\nconst Header = ({ client, error, forgetClient }) => {\n  return (\n    <>\n      {error || !client ? <Redirect to={`${ROUTING_SUBPATH}/login`} /> : null}\n      <div style={{ height: '64px' }} />\n      <AppBar position='fixed'>\n        <Toolbar disableGutters>\n          <Container maxWidth='md'>\n            <ToolbarGrid container justify='space-between' alignItems='center'>\n              <Grid item>\n                <Link to={`${ROUTING_SUBPATH}/`}>\n                  <NavButton>\n                    Home\n                  </NavButton>\n                </Link>\n              </Grid>\n              <Grid item>\n                {client ? (\n                  <Grid container alignItems='center' spacing={2}>\n                    <Grid item>\n                      <div>{client?.name ? `Hi, ${client.name}` : 'Hi, user'}</div>\n                    </Grid>\n                    <Grid item>\n                      <WhiteIconButton\n                        onClick={async () => {\n                          await Promise.all([axios.get(`${API_ENDPOINT}/logout`, { withCredentials: true }),\n                            webAuthClient.logout()]);\n                          forgetClient();\n                        }}\n                      >\n                        <ExitToAppIcon />\n                      </WhiteIconButton>\n                    </Grid>\n                  </Grid>\n                ) : (\n                  <Link to={`${ROUTING_SUBPATH}/login`}>\n                    <WhiteIconButton>\n                      <AccountCircleIcon />\n                    </WhiteIconButton>\n                  </Link>\n                )}\n              </Grid>\n            </ToolbarGrid>\n          </Container>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ auth = {} }) => ({\n  ...auth\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  forgetClient: () => dispatch(forgetClientAction()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React, { useEffect } from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { API_ENDPOINT } from '../../../config';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst AuthIconButton = styled(IconButton)(({ theme, active }) => ({\n  color: active ? theme.palette.primary.main : '#000'\n}));\n\nconst LayoutGrid = ({ children, ...props }) => (\n  <Grid {...props}>\n    {React.Children.map(children, (child, i) => (\n      <Grid item key={i}>\n        {child}\n      </Grid>\n    ))}\n  </Grid>\n);\n\nconst GitHub = ({ active, setAuthControls, onClick }) => {\n  useEffect(() => {\n    if (active) {\n      setAuthControls && setAuthControls({ element: (\n        <LayoutGrid container spacing={2} direction='column'>\n          <Typography>Follow the open window</Typography>\n          <LayoutGrid container spacing={2} direction='column'>\n            <Button variant='outlined' onClick={() => onClick && onClick()}>Cancel</Button>\n          </LayoutGrid>\n        </LayoutGrid>\n      ) });\n    }\n    return () => setAuthControls && setAuthControls(null);\n  }, [active]);\n\n  return (\n    <a href={`${API_ENDPOINT}/auth/github/login`}>\n      <AuthIconButton\n        active={active}\n        onClick={(e) => {\n          if (active) e.stopPropagation();\n          onClick && onClick();\n        }}\n      >\n        <GitHubIcon />\n      </AuthIconButton>\n    </a>\n  );\n};\n\nexport default GitHub;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { webAuthn as webAuthnAction } from '../../../redux/actions/auth';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport VpnKeyOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Client from 'webauthn/client';\nimport { validateEmail } from '../../../helpers';\nimport { API_ENDPOINT } from '../../../config';\n\nconst webAuthClient = new Client({ pathPrefix: `${API_ENDPOINT}/webauthn` });\n\nconst AuthIconButton = styled(IconButton)(({ theme, active }) => ({\n  color: active ? theme.palette.primary.main : '#000'\n}));\n\nconst FullWidthTextField = styled(TextField)({\n  width: '100%'\n});\n\nconst LayoutGrid = ({ children, ...props }) => (\n  <Grid {...props}>\n    {React.Children.map(children, (child, i) => (\n      <Grid item key={i}>\n        {child}\n      </Grid>\n    ))}\n  </Grid>\n);\n\nconst Login = connect(null, (dispatch) => ({\n  webAuthn: dispatch(webAuthnAction())\n}))(({ onCancel, webAuthn }) => {\n  const [store, setStore] = useState({ email: '' });\n  const { email } = store;\n  const emailInputRef = useRef();\n  const [{ email: emailError }, setErrors] = useState({});\n\n  useEffect(() => {\n    if (emailInputRef?.current) {\n      emailInputRef.current.focus();\n    }\n  }, [emailInputRef]);\n\n  const validate = () => {\n    let error;\n\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  return (\n    <LayoutGrid container spacing={2} direction='column'>\n      <LayoutGrid container spacing={2} direction='column'>\n        <FullWidthTextField\n          required\n          variant='outlined'\n          type='email'\n          size='small'\n          value={email}\n          onChange={({ target: { value } }) => {\n            setStore({ ...store, email: value });\n            setErrors((prev) => ({ ...prev, email: null }));\n          }}\n          inputRef={emailInputRef}\n          error={emailError?.error}\n          label={emailError?.label || 'Email'}\n        />\n      </LayoutGrid>\n      <LayoutGrid container justify='space-between'>\n        <Button variant='outlined' onClick={onCancel}>Cancel</Button>\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={async () => {\n            if (validate()) {\n              try {\n                await webAuthClient.login({\n                  username: email,\n                });\n\n                webAuthn();\n              } catch (e) {\n                alert(`login failed ${e}`);\n              }\n            }\n          }}\n        >\n          Login\n        </Button>\n      </LayoutGrid>\n    </LayoutGrid>\n  );\n});\n\nconst Registration = connect(null, (dispatch) => ({\n  webAuthn: dispatch(webAuthnAction())\n}))(({ onCancel, webAuthn }) => {\n  const [store, setStore] = useState({ name: '', email: '' });\n  const { name, email } = store;\n  const nameInputRef = useRef();\n  const [{ email: emailError, name: nameError }, setErrors] = useState({});\n\n  useEffect(() => {\n    if (nameInputRef?.current) {\n      nameInputRef.current.focus();\n    }\n  }, [nameInputRef]);\n\n  const validate = () => {\n    let error;\n\n    if (!name) {\n      error = true;\n      setErrors((prev) => ({ ...prev, name: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  return (\n    <LayoutGrid container spacing={2} direction='column'>\n      <LayoutGrid container spacing={2} direction='column'>\n        <FullWidthTextField\n          required\n          variant='outlined'\n          type='name'\n          size='small'\n          value={name}\n          onChange={({ target: { value } }) => {\n            setStore({ ...store, name: value });\n            setErrors((prev) => ({ ...prev, name: null }));\n          }}\n          inputRef={nameInputRef}\n          error={nameError?.error}\n          label={nameError?.label || 'Name'}\n        />\n        <FullWidthTextField\n          required\n          variant='outlined'\n          type='email'\n          size='small'\n          value={email}\n          onChange={({ target: { value } }) => {\n            setStore({ ...store, email: value });\n            setErrors((prev) => ({ ...prev, email: null }));\n          }}\n          error={emailError?.error}\n          label={emailError?.label || 'Email'}\n        />\n      </LayoutGrid>\n      <LayoutGrid container justify='space-between'>\n        <Button variant='outlined' onClick={onCancel}>Cancel</Button>\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={async () => {\n            if (validate()) {\n              try {\n                await webAuthClient.register({\n                  username: email,\n                  name\n                });\n                webAuthn();\n              } catch (e) {\n                alert(`register failed ${e}`);\n              }\n            }\n          }}\n        >\n          Registration\n        </Button>\n      </LayoutGrid>\n    </LayoutGrid>\n  );\n});\n\nconst WebAuthn = ({ setAuthControls, active, onClick, type }) => {\n  useEffect(() => {\n    if (active) {\n      let component;\n      switch (type) {\n        case 'login': {\n          component = { element: <Login onCancel={() => onClick && onClick()} /> };\n          break;\n        }\n        case 'registration': {\n          component = { element: <Registration onCancel={() => onClick && onClick()} /> };\n          break;\n        }\n        default: {}\n      }\n      setAuthControls && setAuthControls(component || null);\n    }\n    return () => setAuthControls && setAuthControls(null);\n  }, [active, type]);\n\n  return (\n    <Tooltip title={<Typography>WebAuthn</Typography>}>\n      <AuthIconButton\n        active={active}\n        onClick={() => {\n          onClick && onClick();\n        }}\n      >\n        <VpnKeyOutlinedIcon />\n      </AuthIconButton>\n    </Tooltip>\n  );\n};\n\nexport default WebAuthn;\n","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport GitHub from './GitHub';\nimport WebAuthn from './WebAuthn';\n\nconst LayoutGrid = ({ children, itemProps = {}, value, onSelect, ...props }) => (\n  <Grid {...props}>\n    {children.map((child, i) => (\n      <Grid item key={i}>\n        {React.cloneElement(child, { active: (i === value), onClick: () => onSelect(i), ...itemProps })}\n      </Grid>\n    ))}\n  </Grid>\n);\n\nconst Autorizations = ({ type, setAuthControls }) => {\n  const [value, setValue] = useState();\n\n  return (\n    <LayoutGrid\n      container\n      justify='center'\n      spacing={1}\n      onSelect={(i) => setValue(i === value ? null : i)}\n      value={value}\n      itemProps={{\n        type,\n        setAuthControls,\n      }}\n    >\n      <GitHub />\n      <WebAuthn />\n    </LayoutGrid>\n  );\n};\n\nexport default Autorizations;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Autorizations from '../Autorizations';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { validateEmail } from '../../helpers';\nimport { ROUTING_SUBPATH } from '../../config';\nimport { registration as registrationAction } from '../../redux/actions/auth';\n\nconst LayoutGrid = ({ children, ...props }) => (\n  <Grid {...props}>\n    {React.Children.map(children, (child, i) => (\n      <Grid item key={i}>\n        {child}\n      </Grid>\n    ))}\n  </Grid>\n);\n\nconst RegistratoinContainer = styled(Container)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  width: '350px',\n  [theme.breakpoints.down('xs')]: {\n    width: '320px'\n  }\n}));\n\nconst TitleTypography = styled(Typography)(({ theme }) => ({\n  marginBottom: theme.spacing(6)\n}));\n\nconst FullWidthTextField = styled(TextField)({\n  width: '100%'\n});\n\nconst NoDecorationLink = styled(Link)({\n  textDecoration: 'none'\n});\n\nconst Registration = ({ client, registration }) => {\n  const [store, setStore] = useState({ name: '', email: '', password: '' });\n  const { name, email, password } = store;\n  const nameInputRef = useRef();\n  const [{ name: nameError, email: emailError, password: passwordError }, setErrors] = useState({});\n  const [authControls, setAuthControls] = useState();\n\n  useEffect(() => {\n    if (nameInputRef?.current) {\n      nameInputRef.current.focus();\n    }\n  }, [nameInputRef]);\n\n  const validate = () => {\n    let error;\n\n    if (!name) {\n      error = true;\n      setErrors((prev) => ({ ...prev, name: { label: 'Required', error: true } }));\n    }\n    if (!password) {\n      error = true;\n      setErrors((prev) => ({ ...prev, password: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  return (\n    <RegistratoinContainer>\n      {client ? <Redirect to={`${ROUTING_SUBPATH}/`} /> : null}\n      <Paper>\n        <Box p={2}>\n          <LayoutGrid container justify='center' spacing={2} direction='column'>\n            <TitleTypography variant='h6'>\n              Registration\n            </TitleTypography>\n            <Autorizations type='registration' setAuthControls={setAuthControls} />\n            {authControls ? authControls?.element : (\n              <LayoutGrid container justify='center' spacing={2} direction='column'>\n                <LayoutGrid container spacing={2} direction='column'>\n                  <FullWidthTextField\n                    required\n                    variant='outlined'\n                    size='small'\n                    value={name}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, name: value });\n                      setErrors((prev) => ({ ...prev, name: null }));\n                    }}\n                    inputRef={nameInputRef}\n                    error={nameError?.error}\n                    label={nameError?.label || 'Name'}\n                  />\n                  <FullWidthTextField\n                    required\n                    variant='outlined'\n                    type='email'\n                    size='small'\n                    value={email}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, email: value });\n                      setErrors((prev) => ({ ...prev, email: null }));\n                    }}\n                    error={emailError?.error}\n                    label={emailError?.label || 'Email'}\n                  />\n                  <FullWidthTextField\n                    required\n                    variant='outlined'\n                    type='password'\n                    size='small'\n                    value={password}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, password: value });\n                      setErrors((prev) => ({ ...prev, password: null }));\n                    }}\n                    error={passwordError?.error}\n                    label={passwordError?.label || 'Password'}\n                  />\n                </LayoutGrid>\n                <LayoutGrid container justify='space-between'>\n                  <NoDecorationLink to={`${ROUTING_SUBPATH}/login`}>\n                    <Button variant='outlined'>Login</Button>\n                  </NoDecorationLink>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={async () => {\n                      if (validate()) {\n                        try {\n                          await registration({ email, password, name });\n                        } catch {\n                          setErrors({ password: { error: true }, email: { error: true }, name: { error: true } });\n                        }\n                      }\n                    }}\n                  >\n                    Registration\n                  </Button>\n                </LayoutGrid>\n              </LayoutGrid>\n            )}\n          </LayoutGrid>\n        </Box>\n      </Paper>\n    </RegistratoinContainer>\n  );\n};\n\nconst mapStatetoProps = ({ auth }) => ({\n  client: auth.client,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  registration: (...args) => dispatch(registrationAction(...args))\n});\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Registration);\n","import React, { useRef, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { logIn as logInAction } from '../../redux/actions/auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Autorizations from '../Autorizations';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { validateEmail } from '../../helpers';\nimport { ROUTING_SUBPATH } from '../../config';\n\nconst LayoutGrid = ({ children, ...props }) => (\n  <Grid {...props}>\n    {React.Children.map(children, (child, i) => (\n      <Grid item key={i}>\n        {child}\n      </Grid>\n    ))}\n  </Grid>\n);\n\nconst RegistratoinContainer = styled(Container)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  width: '350px',\n  [theme.breakpoints.down('xs')]: {\n    width: '320px'\n  }\n}));\n\nconst TitleTypography = styled(Typography)(({ theme }) => ({\n  marginBottom: theme.spacing(6)\n}));\n\nconst FullWidthTextField = styled(TextField)({\n  width: '100%'\n});\n\nconst NoDecorationLink = styled(Link)({\n  textDecoration: 'none'\n});\n\nconst Login = ({ client, logIn }) => {\n  const [store, setStore] = useState({ password: '', email: '' });\n  const { password, email } = store;\n  const emailInputRef = useRef();\n  const [{ password: passwordError, email: emailError }, setErrors] = useState({});\n  const [authControls, setAuthControls] = useState();\n\n  useEffect(() => {\n    if (emailInputRef?.current) {\n      emailInputRef.current.focus();\n    }\n  }, [emailInputRef]);\n\n  const validate = () => {\n    let error;\n\n    if (!password) {\n      error = true;\n      setErrors((prev) => ({ ...prev, password: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  return (\n    <RegistratoinContainer>\n      {client ? <Redirect to={`${ROUTING_SUBPATH}/`} /> : null}\n      <Paper>\n        <Box p={2}>\n          <LayoutGrid container justify='center' spacing={2} direction='column'>\n            <TitleTypography variant='h6'>\n              Login\n            </TitleTypography>\n            <Autorizations type='login' setAuthControls={setAuthControls} />\n            {authControls ? authControls?.element : (\n              <LayoutGrid container justify='center' spacing={2} direction='column'>\n                <LayoutGrid container spacing={2} direction='column'>\n                  <FullWidthTextField\n                    required\n                    variant='outlined'\n                    type='email'\n                    size='small'\n                    value={email}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, email: value });\n                      setErrors((prev) => ({ ...prev, email: null }));\n                    }}\n                    inputRef={emailInputRef}\n                    error={emailError?.error}\n                    label={emailError?.label || 'Email'}\n                  />\n                  <FullWidthTextField\n                    required\n                    type='password'\n                    variant='outlined'\n                    size='small'\n                    value={password}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, password: value });\n                      setErrors((prev) => ({ ...prev, password: null }));\n                    }}\n                    error={passwordError?.error}\n                    label={passwordError?.label || 'Password'}\n                  />\n                </LayoutGrid>\n                <LayoutGrid container justify='space-between'>\n                  <NoDecorationLink to={`${ROUTING_SUBPATH}/registration`}>\n                    <Button variant='outlined' href='registration'>Registration</Button>\n                  </NoDecorationLink>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={async () => {\n                      if (validate()) {\n                        try {\n                          await logIn({ email, password });\n                        } catch {\n                          setErrors({ password: { error: true }, email: { error: true } });\n                        }\n                      }\n                    }}\n                  >\n                    Login\n                  </Button>\n                </LayoutGrid>\n              </LayoutGrid>\n            )}\n          </LayoutGrid>\n        </Box>\n      </Paper>\n    </RegistratoinContainer>\n  );\n};\n\nconst mapStateToProps = ({ auth }) => ({\n  client: auth.client,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logIn: (...args) => dispatch(logInAction(...args)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { initAuth as initAuthAction } from './redux/actions/auth';\nimport { styled } from '@material-ui/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Home, Header, Registration, Login } from './components';\nimport { ROUTING_SUBPATH } from './config';\nimport './App.css';\n\nconst ProgressWrapper = styled('div')({\n  display: 'flex',\n  flex: '1',\n  justifyContent: 'center',\n  alignItems: 'center'\n});\n\nconst App = ({ loading, initAuth }) => {\n  useEffect(() => {\n    initAuth();\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <ProgressWrapper>\n          <CircularProgress />\n        </ProgressWrapper>\n      ) : (\n        <div className='App'>\n          <Router>\n            <Header />\n            <Switch>\n              <Route exact path={`${ROUTING_SUBPATH}/`}>\n                <Home />\n              </Route>\n              <Route path={`${ROUTING_SUBPATH}/registration`}>\n                <Registration />\n              </Route>\n              <Route path={`${ROUTING_SUBPATH}/login`}>\n                <Login />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ auth = {} }) => ({\n  loading: auth.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  initAuth: () => dispatch(initAuthAction()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { API_ENDPOINT } from './config';\nimport store from './redux/store';\nimport { Provider as ReduxProvider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst client = new ApolloClient({\n  uri: `${API_ENDPOINT}/graphql`,\n  credentials: 'include',\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ReduxProvider store={store}>\n      <App />\n    </ReduxProvider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}