{"version":3,"sources":["config/index.js","mobx/index.js","mobx/auth.js","components/Home/components/UserCard/components/Card/index.js","helpers/index.js","components/Home/components/UserCard/components/EditCard/index.js","components/Home/components/UserCard/index.js","components/Home/components/UserCardSkeleton/index.js","components/Home/components/UserGroupCard/index.js","queries/index.js","components/Home/components/AddUser/index.js","components/Home/index.js","components/Header/index.js","components/Autorizations/GitHub/index.js","components/Autorizations/WebAuthn/index.js","components/Autorizations/index.js","components/Registration/index.js","components/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["API_ENDPOINT","authStore","endpoint","client","undefined","loading","error","makeAutoObservable","this","reaction","a","auth","fireImmediately","flag","commitLoading","axios","get","withCredentials","data","runInAction","commitError","email","password","post","then","action","name","ExpandBody","styled","display","marginLeft","marginTop","Card","deleteItem","showCard","showMoreInfo","setStore","useEffect","setTimeout","Fade","in","Paper","Box","p","Grid","container","justify","alignItems","item","direction","mr","IconButton","size","onClick","spacing","edit","fontSize","Collapse","emailRegex","validateEmail","test","TextField","Field","theme","smallScreenWidth","breakpoints","down","width","EditCard","defaultName","defaulEmail","updateItem","useState","setName","setEmail","nameError","emailError","setErrors","value","onChange","target","prev","label","validate","UserCard","rest","store","set","toSet","UserCardSkeleton","opacity","style","Skeleton","variant","height","UserGroupCard","users","Array","fill","map","i","xs","key","length","user","id","Typography","CREATER_USER","gql","getOpts","limit","GET_USERS","DELETE_USER","UPDATE_USER","AddIconWrapper","position","bottom","right","defaultState","AddUser","defaultShow","setShow","useMutation","update","cache","createdUser","createUser","readQuery","query","variables","writeQuery","concat","nameInputRef","useRef","current","focus","setShowCard","Fab","color","required","inputRef","Wrapper","overflowY","flex","observer","useQuery","refetch","deletedUser","deleteUser","filter","updateUser","_id","pt","mb","to","Container","maxWidth","mt","webAuthClient","Client","pathPrefix","WhiteIconButton","NavButton","Button","minHeight","textTransform","borderRadius","ToolbarGrid","AppBar","Toolbar","disableGutters","Promise","all","logout","forgetClient","AuthIconButton","active","palette","primary","main","LayoutGrid","children","props","React","Children","child","GitHub","setAuthControls","element","href","e","stopPropagation","FullWidthTextField","Login","onCancel","emailInputRef","type","login","username","webAuthn","alert","Registration","register","WebAuthn","component","Tooltip","title","itemProps","onSelect","cloneElement","Autorizations","setValue","RegistratoinContainer","TitleTypography","marginBottom","NoDecorationLink","Link","textDecoration","passwordError","authControls","registration","logIn","ProgressWrapper","justifyContent","CircularProgress","className","exact","path","Boolean","window","location","hostname","match","ApolloClient","uri","credentials","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.16f04225.chunk.js","sourcesContent":["export const TOKEN_STORAGE_KEY = 'token';\nexport const API_ENDPOINT = 'https://ruvodtest.herokuapp.com';\nexport const GITHUB_CLIENT_ID = 'ee99345152f8eba1dfc0';\nexport const ROUTING_SUBPATH = '/ruvod-test';\n","import Auth from './auth';\nimport { API_ENDPOINT } from '../config';\n\nconst authStore = new Auth({ endpoint: API_ENDPOINT });\n\nexport {\n  authStore\n};\n","import axios from 'axios';\nimport { action, runInAction, makeAutoObservable, reaction } from 'mobx';\n\nclass Auth {\n  constructor({ endpoint }) {\n    makeAutoObservable(this);\n    this.API_ENDPOINT = endpoint;\n\n    reaction(() => ({}), async () => {\n      this.auth();\n    }, { fireImmediately: true });\n  }\n\n  client = undefined;\n  loading = false;\n  error = false;\n\n  commitLoading(flag) {\n    this.loading = flag;\n    this.error = false;\n  }\n\n  commitError(flag) {\n    this.error = flag;\n    this.loading = false;\n  }\n\n  async auth() {\n    this.commitLoading(true);\n\n    try {\n      const { data: client } = await axios.get(`${this.API_ENDPOINT}/auth`, {\n        withCredentials: true\n      });\n      runInAction(() => {\n        this.client = client;\n        this.loading = false;\n      });\n    } catch (e) {\n      this.commitError(true);\n    }\n  }\n\n  async logIn({ email, password }) {\n    return axios.post(`${this.API_ENDPOINT}/auth`, { email, password }, {\n      withCredentials: true\n    })\n      .then(action('fetchSuccess', ({ data }) => {\n        this.client = data.client;\n      }));\n  }\n\n  async registration({ email, password, name }) {\n    return axios.post(`${this.API_ENDPOINT}/createClient`, { email, password, name }, {\n      withCredentials: true\n    })\n      .then(action('fetchSuccess', ({ data }) => {\n        this.client = data.client;\n      }));\n  }\n\n  async webAuthn() {\n    const { data: { client } } = await axios.get(`${this.API_ENDPOINT}/auth/webauthn`, {\n      withCredentials: true\n    });\n\n    runInAction(() => {\n      this.client = client;\n    });\n  }\n\n  forgetClient() {\n    this.client = undefined;\n  }\n}\n\nexport default Auth;\n","import React, { useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Collapse from '@material-ui/core/Collapse';\nimport Fade from '@material-ui/core/Fade';\nimport { styled } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\nconst ExpandBody = styled('div')({\n  display: 'flex',\n  marginLeft: '46px',\n  marginTop: '8px'\n});\n\nconst Card = ({ name, email, deleteItem, showCard, showMoreInfo, setStore }) => {\n  useEffect(() => {\n    setTimeout(() => setStore({ showCard: true }), 100);\n  }, []);\n\n  return (\n    <Fade in={showCard}>\n      <Paper>\n        <Box p={2}>\n          <Grid container justify='space-between' alignItems='center'>\n            <Grid item>\n              <Grid container alignItems='center' direction='row'>\n                <Box mr={2}>\n                  <IconButton size='small' onClick={() => setStore({ showMoreInfo: !showMoreInfo })}>\n                    {showMoreInfo\n                      ? <ExpandLessIcon />\n                      : <ExpandMoreIcon />}\n                  </IconButton>\n                </Box>\n                <Grid item>\n                  <Grid container direction='row' alignItems='center' spacing={1}>\n                    <Grid item>\n                      Name:\n                    </Grid>\n                    <Grid item>\n                      {name}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Grid container direction='row' spacing={2}>\n                <Grid item>\n                  <IconButton\n                    size='small'\n                    onClick={() => {\n                      setStore({ edit: true });\n                    }}\n                  >\n                    <EditIcon fontSize='small' />\n                  </IconButton>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    size='small'\n                    onClick={() => {\n                      setStore({ showCard: false });\n                      deleteItem();\n                    }}\n                  >\n                    <DeleteIcon fontSize='small' />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Collapse in={showMoreInfo}>\n            <ExpandBody>\n              <Grid container direction='row' alignItems='center' spacing={1}>\n                <Grid item>\n                  User email:\n                </Grid>\n                <Grid item>\n                  {email}\n                </Grid>\n              </Grid>\n            </ExpandBody>\n          </Collapse>\n        </Box>\n      </Paper>\n    </Fade>\n  );\n};\n\nexport default Card;\n","const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; //eslint-disable-line\n\nconst validateEmail = (email) => {\n  return emailRegex.test(email);\n};\n\nexport {\n  validateEmail\n};\n","import React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Collapse from '@material-ui/core/Collapse';\nimport Fade from '@material-ui/core/Fade';\nimport { styled } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Field from '@material-ui/core/TextField';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { validateEmail } from '../../../../../../helpers';\n\nconst ExpandBody = styled('div')({\n  display: 'flex',\n  marginLeft: '46px',\n  marginTop: '10px'\n});\n\nconst TextField = styled(Field)(({ theme, smallScreenWidth }) => ({\n  [theme.breakpoints.down('xs')]: {\n    width: smallScreenWidth\n  },\n}));\n\nconst EditCard = ({ name: defaultName, email: defaulEmail, showMoreInfo, showCard, setStore, updateItem }) => {\n  const [name, setName] = useState(defaultName);\n  const [email, setEmail] = useState(defaulEmail);\n  const [{ name: nameError, email: emailError }, setErrors] = useState({});\n\n  const validate = () => {\n    let error;\n\n    if (!name) {\n      error = true;\n      setErrors((prev) => ({ ...prev, name: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  return (\n    <Fade in={showCard}>\n      <Paper>\n        <Box p={2}>\n          <Grid container justify='space-between' alignItems='center'>\n            <Grid item>\n              <Grid container alignItems='center'>\n                <Box mr={2}>\n                  <IconButton size='small' onClick={() => setStore({ showMoreInfo: !showMoreInfo })}>\n                    {showMoreInfo\n                      ? <ExpandLessIcon />\n                      : <ExpandMoreIcon />}\n                  </IconButton>\n                </Box>\n                <Grid item>\n                  <Grid container direction='row' alignItems='center' spacing={1}>\n                    <Grid item>\n                      Name:\n                    </Grid>\n                    <Grid item>\n                      <TextField\n                        smallScreenWidth='90px'\n                        value={name}\n                        onChange={({ target: { value } }) => {\n                          setName(value);\n                          setErrors((prev) => ({ ...prev, name: null }));\n                        }}\n                        error={nameError?.error}\n                      />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Grid container direction='row' spacing={2}>\n                <Grid item>\n                  <IconButton\n                    size='small'\n                    onClick={() => {\n                      setStore({ edit: false });\n                    }}\n                  >\n                    <ClearIcon fontSize='small' />\n                  </IconButton>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    size='small'\n                    onClick={() => {\n                      if (validate()) {\n                        setStore({ name, email, edit: false });\n                        updateItem({ name, email });\n                      }\n                    }}\n                  >\n                    <CheckIcon fontSize='small' />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Collapse in={showMoreInfo}>\n            <ExpandBody>\n              <Grid container direction='row' alignItems='center' spacing={1}>\n                <Grid item>\n                  User email:\n                </Grid>\n                <Grid item>\n                  <TextField\n                    smallScreenWidth='140px'\n                    value={email}\n                    onChange={({ target: { value } }) => {\n                      setEmail(value);\n                      setErrors((prev) => ({ ...prev, email: null }));\n                    }}\n                    error={emailError?.error}\n                  />\n                </Grid>\n              </Grid>\n            </ExpandBody>\n          </Collapse>\n        </Box>\n      </Paper>\n    </Fade>\n  );\n};\n\nexport default EditCard;\n","import React, { useState } from 'react';\nimport { Card, EditCard } from './components';\n\nconst UserCard = ({ deleteItem, updateItem, ...rest }) => {\n  const [store, setStore] = useState({ ...rest });\n  const { edit } = store;\n\n  const set = (toSet = {}) => setStore({ ...store, ...toSet });\n\n  return (\n    <>\n      {!edit\n        ? <Card {...store} setStore={set} deleteItem={deleteItem} />\n        : <EditCard {...store} setStore={set} updateItem={updateItem} />}\n    </>\n  );\n};\n\nexport default UserCard;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\nconst defaultHeight = 30;\n\nconst UserCardSkeleton = ({ opacity = 1 }) => {\n  return (\n    <Paper style={{ opacity }}>\n      <Box p={2}>\n        <Grid container justify='space-between' alignItems='center'>\n          <Grid item>\n            <Grid container alignItems='center' direction='row'>\n              <Box mr={4} />\n              <Grid item>\n                <Grid container direction='row' alignItems='center' spacing={1}>\n                  <Grid item>\n                    <Skeleton variant='text' height={defaultHeight} width={45} />\n                  </Grid>\n                  <Grid item>\n                    <Skeleton variant='text' height={defaultHeight} width={145} />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container direction='row' spacing={2}>\n              <Grid item>\n                <Skeleton variant='text' height={defaultHeight} width={18} />\n              </Grid>\n              <Grid item>\n                <Skeleton variant='text' height={defaultHeight} width={18} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default UserCardSkeleton;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport UserCard from '../UserCard';\nimport UserCardSkeleton from '../UserCardSkeleton';\nimport Typography from '@material-ui/core/Typography';\n\nconst UserGroupCard = ({ loading, users = [], deleteItem, updateItem }) => {\n  return (\n    <>\n      {!loading ? (\n        <>\n          {users.length ? (\n            <Grid container spacing={3}>\n              {users.map((user) => (\n                <Grid item xs={12} key={user.id}>\n                  <UserCard\n                    {...user}\n                    deleteItem={() => deleteItem(user.id)}\n                    updateItem={(toSet) => updateItem(user.id, toSet)}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Typography>\n              Users list is empty\n            </Typography>\n          )}\n        </>\n      )\n        : (\n          <Grid container spacing={3}>\n            {Array(6).fill(null).map((a, i) => (\n              <Grid item xs={12} key={i}>\n                <UserCardSkeleton opacity={1 - (i * 1.5) / 10} />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n    </>\n  );\n};\n\nexport default UserGroupCard;\n","import { gql } from 'apollo-boost';\n\nconst CREATER_USER = gql`\n  mutation createUser($user: CreateUserInput!) {\n    createUser(input: $user) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst getOpts = { limit: 100 };\n\nconst GET_USERS = gql`\n  query getUsers($skip: Int, $limit: Int) {\n    users(skip: $skip, limit: $limit) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst DELETE_USER = gql`\n  mutation deleteUser($id: ID!) {\n    deleteUser(id: $id) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst UPDATE_USER = gql`\n  mutation updateUser($id: ID!, $user: UpdateUserInput!) {\n    updateUser(id: $id, input: $user) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nexport {\n  CREATER_USER,\n  GET_USERS,\n  DELETE_USER,\n  UPDATE_USER,\n  getOpts\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport Paper from '@material-ui/core/Paper';\nimport Fade from '@material-ui/core/Fade';\nimport { styled } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Field from '@material-ui/core/TextField';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport { CREATER_USER, GET_USERS, getOpts } from '../../../../queries';\nimport { validateEmail } from '../../../../helpers';\n\nconst ExpandBody = styled('div')({\n  display: 'flex',\n  marginLeft: '16px',\n  marginTop: '10px'\n});\n\nconst AddIconWrapper = styled('div')({\n  position: 'fixed',\n  bottom: '15vh',\n  right: '20vw'\n});\n\nconst TextField = styled(Field)(({ theme, smallScreenWidth }) => ({\n  [theme.breakpoints.down('xs')]: {\n    width: smallScreenWidth\n  },\n}));\n\nconst defaultState = { name: '', email: '' };\n\nconst AddUser = ({ defaultShow }) => {\n  const [showCard, setShow] = useState(defaultShow);\n  const [store, setStore] = useState(defaultState);\n  const { name, email } = store;\n  const [createUser] = useMutation(CREATER_USER, {\n    update(cache, { data: { createUser: createdUser } }) {\n      const { users } = cache.readQuery({ query: GET_USERS, variables: getOpts });\n      cache.writeQuery({\n        query: GET_USERS,\n        data: { users: users.concat(createdUser) },\n        variables: getOpts\n      });\n    }\n  });\n  const nameInputRef = useRef();\n  const [{ name: nameError, email: emailError }, setErrors] = useState({});\n\n  useEffect(() => {\n    if (showCard && nameInputRef?.current) {\n      nameInputRef.current.focus();\n    }\n  }, [showCard]);\n\n  const validate = () => {\n    let error;\n\n    if (!name) {\n      error = true;\n      setErrors((prev) => ({ ...prev, name: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  const setShowCard = (flag) => {\n    setShow(flag);\n    if (!flag) {\n      setStore(defaultState);\n      setErrors({});\n    }\n  };\n\n  return (\n    <>\n      <AddIconWrapper>\n        <Fab color='primary' onClick={() => setShowCard(!showCard)}>\n          {showCard ? <ClearIcon /> : <AddIcon />}\n        </Fab>\n      </AddIconWrapper>\n      <Fade in={showCard}>\n        <Paper>\n          <Box p={2}>\n            <Grid container justify='space-between' alignItems='center'>\n              <Grid item>\n                <Grid container alignItems='center'>\n                  <Box mr={2} />\n                  <Grid item>\n                    <Grid container direction='row' alignItems='center' spacing={1}>\n                      <Grid item>\n                        Name:\n                      </Grid>\n                      <Grid item>\n                        <TextField\n                          smallScreenWidth='100px'\n                          required\n                          value={name}\n                          onChange={({ target: { value } }) => {\n                            setStore({ ...store, name: value });\n                            setErrors((prev) => ({ ...prev, name: null }));\n                          }}\n                          inputRef={nameInputRef}\n                          error={nameError?.error}\n                        />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container direction='row' spacing={2}>\n                  <Grid item>\n                    <IconButton\n                      size='small'\n                      onClick={() => {\n                        setShowCard(false);\n                      }}\n                    >\n                      <ClearIcon fontSize='small' />\n                    </IconButton>\n                  </Grid>\n                  <Grid item>\n                    <IconButton\n                      size='small'\n                      onClick={() => {\n                        if (validate()) {\n                          setShowCard(false);\n                          createUser({ variables: { user: { name, email } } });\n                        }\n                      }}\n                    >\n                      <CheckIcon fontSize='small' />\n                    </IconButton>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <ExpandBody>\n              <Grid container direction='row' alignItems='center' spacing={1}>\n                <Grid item>\n                  User email:\n                </Grid>\n                <Grid item>\n                  <TextField\n                    smallScreenWidth='150px'\n                    required\n                    value={email}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, email: value });\n                      setErrors((prev) => ({ ...prev, email: null }));\n                    }}\n                    error={emailError?.error}\n                  />\n                </Grid>\n              </Grid>\n            </ExpandBody>\n          </Box>\n        </Paper>\n      </Fade>\n    </>\n  );\n};\n\nexport default AddUser;\n","import React, { useEffect } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { styled } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport { UserGroupCard, AddUser } from './components';\nimport { GET_USERS, DELETE_USER, UPDATE_USER, getOpts } from '../../queries';\nimport { Redirect } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { authStore } from '../../mobx';\nimport { ROUTING_SUBPATH } from '../../config';\n\nconst Wrapper = styled(Box)({\n  overflowY: 'scroll',\n  display: 'flex',\n  flex: '1'\n});\n\nconst Home = () => {\n  const { loading, data, refetch } = useQuery(GET_USERS, { variables: getOpts });\n  const [deleteUser] = useMutation(DELETE_USER, {\n    update(cache, { data: { deleteUser: deletedUser } }) {\n      const { users } = cache.readQuery({ query: GET_USERS, variables: getOpts });\n      cache.writeQuery({\n        query: GET_USERS,\n        data: { users: users.filter(({ id }) => id !== deletedUser?.id) },\n        variables: getOpts\n      });\n    }\n  });\n  const [updateUser] = useMutation(UPDATE_USER);\n  const { client } = authStore;\n\n  useEffect(() => {\n    if (client?._id) {\n      refetch({ variables: getOpts });\n    }\n  }, [client?._id]);\n\n  return (\n    <Wrapper pt={2} mb={2}>\n      {!client ? <Redirect to={`${ROUTING_SUBPATH}/login`} /> : null}\n      <Container maxWidth='sm'>\n        <UserGroupCard\n          users={data?.users}\n          loading={loading}\n          deleteItem={(id) => deleteUser({ variables: { id } })}\n          updateItem={(id, user = {}) => updateUser({ variables: { id, user } })}\n        />\n        <Box mt={3}>\n          <AddUser />\n        </Box>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default observer(Home);\n","import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { API_ENDPOINT, ROUTING_SUBPATH } from '../../config';\nimport axios from 'axios';\nimport Client from 'webauthn/client';\nimport { authStore } from '../../mobx';\nimport { observer } from 'mobx-react-lite';\n\nconst webAuthClient = new Client({ pathPrefix: `${API_ENDPOINT}/webauthn` });\n\nconst WhiteIconButton = styled(IconButton)({\n  color: '#FFF',\n});\n\nconst NavButton = styled(Button)({\n  color: '#FFF',\n  minHeight: '64px',\n  textTransform: 'none',\n  borderRadius: 0,\n  fontSize: '16px'\n});\n\nconst ToolbarGrid = styled(Grid)({\n  minHeight: '64px'\n});\n\nconst Header = () => {\n  const { client, error } = authStore;\n\n  return (\n    <>\n      {error || !client ? <Redirect to={`${ROUTING_SUBPATH}/login`} /> : null}\n      <div style={{ height: '64px' }} />\n      <AppBar position='fixed'>\n        <Toolbar disableGutters>\n          <Container maxWidth='md'>\n            <ToolbarGrid container justify='space-between' alignItems='center'>\n              <Grid item>\n                <Link to={`${ROUTING_SUBPATH}/`}>\n                  <NavButton>\n                    Home\n                  </NavButton>\n                </Link>\n              </Grid>\n              <Grid item>\n                {client ? (\n                  <Grid container alignItems='center' spacing={2}>\n                    <Grid item>\n                      <div>{client?.name ? `Hi, ${client.name}` : 'Hi, user'}</div>\n                    </Grid>\n                    <Grid item>\n                      <WhiteIconButton\n                        onClick={async () => {\n                          await Promise.all([axios.get(`${API_ENDPOINT}/logout`, { withCredentials: true }),\n                            webAuthClient.logout()]);\n                          authStore.forgetClient();\n                        }}\n                      >\n                        <ExitToAppIcon />\n                      </WhiteIconButton>\n                    </Grid>\n                  </Grid>\n                ) : (\n                  <Link to={`${ROUTING_SUBPATH}/login`}>\n                    <WhiteIconButton>\n                      <AccountCircleIcon />\n                    </WhiteIconButton>\n                  </Link>\n                )}\n              </Grid>\n            </ToolbarGrid>\n          </Container>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default observer(Header);\n","import React, { useEffect } from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { API_ENDPOINT } from '../../../config';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst AuthIconButton = styled(IconButton)(({ theme, active }) => ({\n  color: active ? theme.palette.primary.main : '#000'\n}));\n\nconst LayoutGrid = ({ children, ...props }) => (\n  <Grid {...props}>\n    {React.Children.map(children, (child, i) => (\n      <Grid item key={i}>\n        {child}\n      </Grid>\n    ))}\n  </Grid>\n);\n\nconst GitHub = ({ active, setAuthControls, onClick }) => {\n  useEffect(() => {\n    if (active) {\n      setAuthControls && setAuthControls({ element: (\n        <LayoutGrid container spacing={2} direction='column'>\n          <Typography>Follow the open window</Typography>\n          <LayoutGrid container spacing={2} direction='column'>\n            <Button variant='outlined' onClick={() => onClick && onClick()}>Cancel</Button>\n          </LayoutGrid>\n        </LayoutGrid>\n      ) });\n    }\n    return () => setAuthControls && setAuthControls(null);\n  }, [active]);\n\n  return (\n    <a href={`${API_ENDPOINT}/auth/github/login`}>\n      <AuthIconButton\n        active={active}\n        onClick={(e) => {\n          if (active) e.stopPropagation();\n          onClick && onClick();\n        }}\n      >\n        <GitHubIcon />\n      </AuthIconButton>\n    </a>\n  );\n};\n\nexport default GitHub;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { authStore } from '../../../mobx';\nimport { observer } from 'mobx-react-lite';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport VpnKeyOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Client from 'webauthn/client';\nimport { validateEmail } from '../../../helpers';\nimport { API_ENDPOINT } from '../../../config';\n\nconst webAuthClient = new Client({ pathPrefix: `${API_ENDPOINT}/webauthn` });\n\nconst AuthIconButton = styled(IconButton)(({ theme, active }) => ({\n  color: active ? theme.palette.primary.main : '#000'\n}));\n\nconst FullWidthTextField = styled(TextField)({\n  width: '100%'\n});\n\nconst LayoutGrid = ({ children, ...props }) => (\n  <Grid {...props}>\n    {React.Children.map(children, (child, i) => (\n      <Grid item key={i}>\n        {child}\n      </Grid>\n    ))}\n  </Grid>\n);\n\nconst Login = observer(({ onCancel }) => {\n  const [store, setStore] = useState({ email: '' });\n  const { email } = store;\n  const emailInputRef = useRef();\n  const [{ email: emailError }, setErrors] = useState({});\n\n  useEffect(() => {\n    if (emailInputRef?.current) {\n      emailInputRef.current.focus();\n    }\n  }, [emailInputRef]);\n\n  const validate = () => {\n    let error;\n\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  return (\n    <LayoutGrid container spacing={2} direction='column'>\n      <LayoutGrid container spacing={2} direction='column'>\n        <FullWidthTextField\n          required\n          variant='outlined'\n          type='email'\n          size='small'\n          value={email}\n          onChange={({ target: { value } }) => {\n            setStore({ ...store, email: value });\n            setErrors((prev) => ({ ...prev, email: null }));\n          }}\n          inputRef={emailInputRef}\n          error={emailError?.error}\n          label={emailError?.label || 'Email'}\n        />\n      </LayoutGrid>\n      <LayoutGrid container justify='space-between'>\n        <Button variant='outlined' onClick={onCancel}>Cancel</Button>\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={async () => {\n            if (validate()) {\n              try {\n                await webAuthClient.login({\n                  username: email,\n                });\n\n                authStore.webAuthn();\n              } catch (e) {\n                alert(`login failed ${e}`);\n              }\n            }\n          }}\n        >\n          Login\n        </Button>\n      </LayoutGrid>\n    </LayoutGrid>\n  );\n});\n\nconst Registration = observer(({ onCancel }) => {\n  const [store, setStore] = useState({ name: '', email: '' });\n  const { name, email } = store;\n  const nameInputRef = useRef();\n  const [{ email: emailError, name: nameError }, setErrors] = useState({});\n\n  useEffect(() => {\n    if (nameInputRef?.current) {\n      nameInputRef.current.focus();\n    }\n  }, [nameInputRef]);\n\n  const validate = () => {\n    let error;\n\n    if (!name) {\n      error = true;\n      setErrors((prev) => ({ ...prev, name: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  return (\n    <LayoutGrid container spacing={2} direction='column'>\n      <LayoutGrid container spacing={2} direction='column'>\n        <FullWidthTextField\n          required\n          variant='outlined'\n          type='name'\n          size='small'\n          value={name}\n          onChange={({ target: { value } }) => {\n            setStore({ ...store, name: value });\n            setErrors((prev) => ({ ...prev, name: null }));\n          }}\n          inputRef={nameInputRef}\n          error={nameError?.error}\n          label={nameError?.label || 'Name'}\n        />\n        <FullWidthTextField\n          required\n          variant='outlined'\n          type='email'\n          size='small'\n          value={email}\n          onChange={({ target: { value } }) => {\n            setStore({ ...store, email: value });\n            setErrors((prev) => ({ ...prev, email: null }));\n          }}\n          error={emailError?.error}\n          label={emailError?.label || 'Email'}\n        />\n      </LayoutGrid>\n      <LayoutGrid container justify='space-between'>\n        <Button variant='outlined' onClick={onCancel}>Cancel</Button>\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={async () => {\n            if (validate()) {\n              try {\n                await webAuthClient.register({\n                  username: email,\n                  name\n                });\n                authStore.webAuthn();\n              } catch (e) {\n                alert(`register failed ${e}`);\n              }\n            }\n          }}\n        >\n          Registration\n        </Button>\n      </LayoutGrid>\n    </LayoutGrid>\n  );\n});\n\nconst WebAuthn = ({ setAuthControls, active, onClick, type }) => {\n  useEffect(() => {\n    if (active) {\n      let component;\n      switch (type) {\n        case 'login': {\n          component = { element: <Login onCancel={() => onClick && onClick()} /> };\n          break;\n        }\n        case 'registration': {\n          component = { element: <Registration onCancel={() => onClick && onClick()} /> };\n          break;\n        }\n        default: {}\n      }\n      setAuthControls && setAuthControls(component || null);\n    }\n    return () => setAuthControls && setAuthControls(null);\n  }, [active, type]);\n\n  return (\n    <Tooltip title={<Typography>WebAuthn</Typography>}>\n      <AuthIconButton\n        active={active}\n        onClick={() => {\n          onClick && onClick();\n        }}\n      >\n        <VpnKeyOutlinedIcon />\n      </AuthIconButton>\n    </Tooltip>\n  );\n};\n\nexport default WebAuthn;\n","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport GitHub from './GitHub';\nimport WebAuthn from './WebAuthn';\n\nconst LayoutGrid = ({ children, itemProps = {}, value, onSelect, ...props }) => (\n  <Grid {...props}>\n    {children.map((child, i) => (\n      <Grid item key={i}>\n        {React.cloneElement(child, { active: (i === value), onClick: () => onSelect(i), ...itemProps })}\n      </Grid>\n    ))}\n  </Grid>\n);\n\nconst Autorizations = ({ type, setAuthControls }) => {\n  const [value, setValue] = useState();\n\n  return (\n    <LayoutGrid\n      container\n      justify='center'\n      spacing={1}\n      onSelect={(i) => setValue(i === value ? null : i)}\n      value={value}\n      itemProps={{\n        type,\n        setAuthControls,\n      }}\n    >\n      <GitHub />\n      <WebAuthn />\n    </LayoutGrid>\n  );\n};\n\nexport default Autorizations;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Autorizations from '../Autorizations';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { validateEmail } from '../../helpers';\nimport { ROUTING_SUBPATH } from '../../config';\nimport { observer } from 'mobx-react-lite';\nimport { authStore } from '../../mobx';\n\nconst LayoutGrid = ({ children, ...props }) => (\n  <Grid {...props}>\n    {React.Children.map(children, (child, i) => (\n      <Grid item key={i}>\n        {child}\n      </Grid>\n    ))}\n  </Grid>\n);\n\nconst RegistratoinContainer = styled(Container)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  width: '350px',\n  [theme.breakpoints.down('xs')]: {\n    width: '320px'\n  }\n}));\n\nconst TitleTypography = styled(Typography)(({ theme }) => ({\n  marginBottom: theme.spacing(6)\n}));\n\nconst FullWidthTextField = styled(TextField)({\n  width: '100%'\n});\n\nconst NoDecorationLink = styled(Link)({\n  textDecoration: 'none'\n});\n\nconst Registration = () => {\n  const [store, setStore] = useState({ name: '', email: '', password: '' });\n  const { name, email, password } = store;\n  const nameInputRef = useRef();\n  const [{ name: nameError, email: emailError, password: passwordError }, setErrors] = useState({});\n  const [authControls, setAuthControls] = useState();\n  const { client } = authStore;\n\n  useEffect(() => {\n    if (nameInputRef?.current) {\n      nameInputRef.current.focus();\n    }\n  }, [nameInputRef]);\n\n  const validate = () => {\n    let error;\n\n    if (!name) {\n      error = true;\n      setErrors((prev) => ({ ...prev, name: { label: 'Required', error: true } }));\n    }\n    if (!password) {\n      error = true;\n      setErrors((prev) => ({ ...prev, password: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  return (\n    <RegistratoinContainer>\n      {client ? <Redirect to={`${ROUTING_SUBPATH}/`} /> : null}\n      <Paper>\n        <Box p={2}>\n          <LayoutGrid container justify='center' spacing={2} direction='column'>\n            <TitleTypography variant='h6'>\n              Registration\n            </TitleTypography>\n            <Autorizations type='registration' setAuthControls={setAuthControls} />\n            {authControls ? authControls?.element : (\n              <LayoutGrid container justify='center' spacing={2} direction='column'>\n                <LayoutGrid container spacing={2} direction='column'>\n                  <FullWidthTextField\n                    required\n                    variant='outlined'\n                    size='small'\n                    value={name}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, name: value });\n                      setErrors((prev) => ({ ...prev, name: null }));\n                    }}\n                    inputRef={nameInputRef}\n                    error={nameError?.error}\n                    label={nameError?.label || 'Name'}\n                  />\n                  <FullWidthTextField\n                    required\n                    variant='outlined'\n                    type='email'\n                    size='small'\n                    value={email}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, email: value });\n                      setErrors((prev) => ({ ...prev, email: null }));\n                    }}\n                    error={emailError?.error}\n                    label={emailError?.label || 'Email'}\n                  />\n                  <FullWidthTextField\n                    required\n                    variant='outlined'\n                    type='password'\n                    size='small'\n                    value={password}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, password: value });\n                      setErrors((prev) => ({ ...prev, password: null }));\n                    }}\n                    error={passwordError?.error}\n                    label={passwordError?.label || 'Password'}\n                  />\n                </LayoutGrid>\n                <LayoutGrid container justify='space-between'>\n                  <NoDecorationLink to={`${ROUTING_SUBPATH}/login`}>\n                    <Button variant='outlined'>Login</Button>\n                  </NoDecorationLink>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={async () => {\n                      if (validate()) {\n                        try {\n                          await authStore.registration({ email, password, name });\n                        } catch {\n                          setErrors({ password: { error: true }, email: { error: true }, name: { error: true } });\n                        }\n                      }\n                    }}\n                  >\n                    Registration\n                  </Button>\n                </LayoutGrid>\n              </LayoutGrid>\n            )}\n          </LayoutGrid>\n        </Box>\n      </Paper>\n    </RegistratoinContainer>\n  );\n};\n\nexport default observer(Registration);\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Autorizations from '../Autorizations';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { validateEmail } from '../../helpers';\nimport { ROUTING_SUBPATH } from '../../config';\nimport { observer } from 'mobx-react-lite';\nimport { authStore } from '../../mobx';\n\nconst LayoutGrid = ({ children, ...props }) => (\n  <Grid {...props}>\n    {React.Children.map(children, (child, i) => (\n      <Grid item key={i}>\n        {child}\n      </Grid>\n    ))}\n  </Grid>\n);\n\nconst RegistratoinContainer = styled(Container)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  width: '350px',\n  [theme.breakpoints.down('xs')]: {\n    width: '320px'\n  }\n}));\n\nconst TitleTypography = styled(Typography)(({ theme }) => ({\n  marginBottom: theme.spacing(6)\n}));\n\nconst FullWidthTextField = styled(TextField)({\n  width: '100%'\n});\n\nconst NoDecorationLink = styled(Link)({\n  textDecoration: 'none'\n});\n\nconst Login = () => {\n  const [store, setStore] = useState({ password: '', email: '' });\n  const { password, email } = store;\n  const emailInputRef = useRef();\n  const [{ password: passwordError, email: emailError }, setErrors] = useState({});\n  const [authControls, setAuthControls] = useState();\n  const { client } = authStore;\n\n  useEffect(() => {\n    if (emailInputRef?.current) {\n      emailInputRef.current.focus();\n    }\n  }, [emailInputRef]);\n\n  const validate = () => {\n    let error;\n\n    if (!password) {\n      error = true;\n      setErrors((prev) => ({ ...prev, password: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  return (\n    <RegistratoinContainer>\n      {client ? <Redirect to={`${ROUTING_SUBPATH}/`} /> : null}\n      <Paper>\n        <Box p={2}>\n          <LayoutGrid container justify='center' spacing={2} direction='column'>\n            <TitleTypography variant='h6'>\n              Login\n            </TitleTypography>\n            <Autorizations type='login' setAuthControls={setAuthControls} />\n            {authControls ? authControls?.element : (\n              <LayoutGrid container justify='center' spacing={2} direction='column'>\n                <LayoutGrid container spacing={2} direction='column'>\n                  <FullWidthTextField\n                    required\n                    variant='outlined'\n                    type='email'\n                    size='small'\n                    value={email}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, email: value });\n                      setErrors((prev) => ({ ...prev, email: null }));\n                    }}\n                    inputRef={emailInputRef}\n                    error={emailError?.error}\n                    label={emailError?.label || 'Email'}\n                  />\n                  <FullWidthTextField\n                    required\n                    type='password'\n                    variant='outlined'\n                    size='small'\n                    value={password}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, password: value });\n                      setErrors((prev) => ({ ...prev, password: null }));\n                    }}\n                    error={passwordError?.error}\n                    label={passwordError?.label || 'Password'}\n                  />\n                </LayoutGrid>\n                <LayoutGrid container justify='space-between'>\n                  <NoDecorationLink to={`${ROUTING_SUBPATH}/registration`}>\n                    <Button variant='outlined' href='registration'>Registration</Button>\n                  </NoDecorationLink>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={async () => {\n                      if (validate()) {\n                        try {\n                          await authStore.logIn({ email, password });\n                        } catch {\n                          setErrors({ password: { error: true }, email: { error: true } });\n                        }\n                      }\n                    }}\n                  >\n                    Login\n                  </Button>\n                </LayoutGrid>\n              </LayoutGrid>\n            )}\n          </LayoutGrid>\n        </Box>\n      </Paper>\n    </RegistratoinContainer>\n  );\n};\n\nexport default observer(Login);\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { authStore } from './mobx';\nimport { styled } from '@material-ui/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Home, Header, Registration, Login } from './components';\nimport { ROUTING_SUBPATH } from './config';\nimport { observer } from 'mobx-react-lite';\nimport './App.css';\n\nconst ProgressWrapper = styled('div')({\n  display: 'flex',\n  flex: '1',\n  justifyContent: 'center',\n  alignItems: 'center'\n});\n\nconst App = () => {\n  return (\n    <>\n      {authStore.loading ? (\n        <ProgressWrapper>\n          <CircularProgress />\n        </ProgressWrapper>\n      ) : (\n        <div className='App'>\n          <Router>\n            <Header />\n            <Switch>\n              <Route exact path={`${ROUTING_SUBPATH}/`}>\n                <Home />\n              </Route>\n              <Route path={`${ROUTING_SUBPATH}/registration`}>\n                <Registration />\n              </Route>\n              <Route path={`${ROUTING_SUBPATH}/login`}>\n                <Login />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default observer(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { API_ENDPOINT } from './config';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst client = new ApolloClient({\n  uri: `${API_ENDPOINT}/graphql`,\n  credentials: 'include',\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}