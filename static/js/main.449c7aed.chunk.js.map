{"version":3,"sources":["components/Home/components/UserCard/components/Card/index.js","helpers/index.js","components/Home/components/UserCard/components/EditCard/index.js","components/Home/components/UserCard/index.js","components/Home/components/UserCardSkeleton/index.js","components/Home/components/UserGroupCard/index.js","queries/index.js","components/Home/components/AddUser/index.js","config/index.js","components/AuthClient/index.js","components/Home/index.js","components/Header/index.js","components/Autorizations/GitHub/utils.js","components/Autorizations/GitHub/PopupWindow.js","components/Autorizations/GitHub/GitHubLogin.js","components/Autorizations/GitHub/index.js","components/Autorizations/WebAuthn/index.js","components/Autorizations/index.js","components/Registration/index.js","components/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["ExpandBody","styled","display","marginLeft","marginTop","Card","name","email","deleteItem","showCard","showMoreInfo","setStore","useEffect","setTimeout","Fade","in","Paper","Box","p","Grid","container","justify","alignItems","item","direction","mr","IconButton","size","onClick","spacing","edit","fontSize","Collapse","emailRegex","validateEmail","test","EditCard","defaultName","defaulEmail","updateItem","useState","setName","setEmail","nameError","emailError","setErrors","TextField","value","onChange","target","prev","error","label","validate","UserCard","rest","store","set","toSet","UserCardSkeleton","Skeleton","variant","height","width","UserGroupCard","loading","users","Array","fill","map","a","i","xs","key","length","user","id","Typography","CREATER_USER","gql","getOpts","limit","GET_USERS","DELETE_USER","UPDATE_USER","AddIconWrapper","position","bottom","right","defaultState","AddUser","defaultShow","setShow","useMutation","update","cache","createdUser","data","createUser","readQuery","query","variables","writeQuery","concat","nameInputRef","useRef","current","focus","setShowCard","flag","Fab","color","required","inputRef","constants","TOKEN_STORAGE_KEY","API_ENDPOINT","GITHUB_CLIENT_ID","ROUTING_SUBPATH","AuthContext","createContext","withAuth","Component","props","Consumer","useAuth","Wrapper","overflowY","flex","useQuery","refetch","deletedUser","deleteUser","filter","updateUser","pt","mb","notAuthorized","to","Container","maxWidth","mt","WhiteIconButton","NavButton","Button","minHeight","textTransform","borderRadius","ToolbarGrid","client","setAuth","style","AppBar","Toolbar","disableGutters","axios","get","withCredentials","toQuery","params","delimiter","keys","Object","reduce","str","index","PopupWindow","url","options","this","window","open","cancel","close","promise","Promise","resolve","reject","_iid","setInterval","popup","closed","Error","location","href","pathname","search","replace","split","values","param","clearInterval","then","args","poll","GitHubLogin","onBtnClick","client_id","clientId","scope","redirect_uri","redirectUri","onRequest","onSuccess","onFailure","code","className","buttonText","children","attrs","defaultProps","AuthIconButton","theme","active","palette","primary","main","LayoutGrid","React","Children","child","setAuthControls","type","setRedirect","element","e","stopPropagation","console","log","webAuthClient","Client","pathPrefix","FullWidthTextField","Login","onCancel","password","emailInputRef","login","username","Registration","register","WebAuthn","component","itemProps","onSelect","cloneElement","Autorizations","setValue","RegistratoinContainer","breakpoints","down","TitleTypography","marginBottom","redirect","passwordError","authControls","post","catch","ProgressWrapper","justifyContent","App","state","setState","fetch","useAuthClient","Provider","CircularProgress","exact","path","Boolean","hostname","match","ApolloClient","uri","credentials","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.449c7aed.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Collapse from '@material-ui/core/Collapse';\nimport Fade from '@material-ui/core/Fade';\nimport { styled } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\nconst ExpandBody = styled('div')({\n  display: 'flex',\n  marginLeft: '46px',\n  marginTop: '8px'\n});\n\nconst Card = ({ name, email, deleteItem, showCard, showMoreInfo, setStore }) => {\n  useEffect(() => {\n    setTimeout(() => setStore({ showCard: true }), 100);\n  }, []);\n\n  return (\n    <Fade in={showCard}>\n      <Paper>\n        <Box p={2}>\n          <Grid container justify='space-between' alignItems='center'>\n            <Grid item>\n              <Grid container alignItems='center' direction='row'>\n                <Box mr={2}>\n                  <IconButton size='small' onClick={() => setStore({ showMoreInfo: !showMoreInfo })}>\n                    {showMoreInfo\n                      ? <ExpandLessIcon />\n                      : <ExpandMoreIcon />}\n                  </IconButton>\n                </Box>\n                <Grid item>\n                  <Grid container direction='row' alignItems='center' spacing={1}>\n                    <Grid item>\n                      Name:\n                    </Grid>\n                    <Grid item>\n                      {name}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Grid container direction='row' spacing={2}>\n                <Grid item>\n                  <IconButton\n                    size='small'\n                    onClick={() => {\n                      setStore({ edit: true });\n                    }}\n                  >\n                    <EditIcon fontSize='small' />\n                  </IconButton>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    size='small'\n                    onClick={() => {\n                      setStore({ showCard: false });\n                      deleteItem();\n                    }}\n                  >\n                    <DeleteIcon fontSize='small' />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Collapse in={showMoreInfo}>\n            <ExpandBody>\n              <Grid container direction='row' alignItems='center' spacing={1}>\n                <Grid item>\n                  User email:\n                </Grid>\n                <Grid item>\n                  {email}\n                </Grid>\n              </Grid>\n            </ExpandBody>\n          </Collapse>\n        </Box>\n      </Paper>\n    </Fade>\n  );\n};\n\nexport default Card;\n","const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; //eslint-disable-line\n\nconst validateEmail = (email) => {\n  return emailRegex.test(email);\n};\n\nexport {\n  validateEmail\n};\n\nexport const setCookie = (name, value, options = {}) => {\n  const newOptions = {\n    path: '/',\n    ...options\n  };\n\n  if (newOptions.expires instanceof Date) {\n    newOptions.expires = newOptions.expires.toUTCString();\n  }\n\n  let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);  //eslint-disable-line\n\n  for (const optionKey in options) {\n    updatedCookie += '; ' + optionKey;\n    const optionValue = options[optionKey];\n    if (optionValue !== true) {\n      updatedCookie += '=' + optionValue;\n    }\n  }\n\n  document.cookie = updatedCookie;\n};\n","import React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Collapse from '@material-ui/core/Collapse';\nimport Fade from '@material-ui/core/Fade';\nimport { styled } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { validateEmail } from '../../../../../../helpers';\n\nconst ExpandBody = styled('div')({\n  display: 'flex',\n  marginLeft: '46px',\n  marginTop: '10px'\n});\n\nconst EditCard = ({ name: defaultName, email: defaulEmail, showMoreInfo, showCard, setStore, updateItem }) => {\n  const [name, setName] = useState(defaultName);\n  const [email, setEmail] = useState(defaulEmail);\n  const [{ name: nameError, email: emailError }, setErrors] = useState({});\n\n  const validate = () => {\n    let error;\n\n    if (!name) {\n      error = true;\n      setErrors((prev) => ({ ...prev, name: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  return (\n    <Fade in={showCard}>\n      <Paper>\n        <Box p={2}>\n          <Grid container justify='space-between' alignItems='center'>\n            <Grid item>\n              <Grid container alignItems='center'>\n                <Box mr={2}>\n                  <IconButton size='small' onClick={() => setStore({ showMoreInfo: !showMoreInfo })}>\n                    {showMoreInfo\n                      ? <ExpandLessIcon />\n                      : <ExpandMoreIcon />}\n                  </IconButton>\n                </Box>\n                <Grid item>\n                  <Grid container direction='row' alignItems='center' spacing={1}>\n                    <Grid item>\n                      Name:\n                    </Grid>\n                    <Grid item>\n                      <TextField\n                        value={name}\n                        onChange={({ target: { value } }) => {\n                          setName(value);\n                          setErrors((prev) => ({ ...prev, name: null }));\n                        }}\n                        error={nameError?.error}\n                      />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Grid container direction='row' spacing={2}>\n                <Grid item>\n                  <IconButton\n                    size='small'\n                    onClick={() => {\n                      setStore({ edit: false });\n                    }}\n                  >\n                    <ClearIcon fontSize='small' />\n                  </IconButton>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    size='small'\n                    onClick={() => {\n                      if (validate()) {\n                        setStore({ name, email, edit: false });\n                        updateItem({ name, email });\n                      }\n                    }}\n                  >\n                    <CheckIcon fontSize='small' />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Collapse in={showMoreInfo}>\n            <ExpandBody>\n              <Grid container direction='row' alignItems='center' spacing={1}>\n                <Grid item>\n                  User email:\n                </Grid>\n                <Grid item>\n                  <TextField\n                    value={email}\n                    onChange={({ target: { value } }) => {\n                      setEmail(value);\n                      setErrors((prev) => ({ ...prev, email: null }));\n                    }}\n                    error={emailError?.error}\n                  />\n                </Grid>\n              </Grid>\n            </ExpandBody>\n          </Collapse>\n        </Box>\n      </Paper>\n    </Fade>\n  );\n};\n\nexport default EditCard;\n","import React, { useState } from 'react';\nimport { Card, EditCard } from './components';\n\nconst UserCard = ({ deleteItem, updateItem, ...rest }) => {\n  const [store, setStore] = useState({ ...rest });\n  const { edit } = store;\n\n  const set = (toSet = {}) => setStore({ ...store, ...toSet });\n\n  return (\n    <>\n      {!edit\n        ? <Card {...store} setStore={set} deleteItem={deleteItem} />\n        : <EditCard {...store} setStore={set} updateItem={updateItem} />}\n    </>\n  );\n};\n\nexport default UserCard;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\nconst defaultHeight = 30;\n\nconst UserCardSkeleton = () => {\n  return (\n    <Paper>\n      <Box p={2}>\n        <Grid container justify='space-between' alignItems='center'>\n          <Grid item>\n            <Grid container alignItems='center' direction='row'>\n              <Box mr={4} />\n              <Grid item>\n                <Grid container direction='row' alignItems='center' spacing={1}>\n                  <Grid item>\n                    <Skeleton variant='text' height={defaultHeight} width={50} />\n                  </Grid>\n                  <Grid item>\n                    <Skeleton variant='text' height={defaultHeight} width={150} />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container direction='row' spacing={2}>\n              <Grid item>\n                <Skeleton variant='text' height={defaultHeight} width={20} />\n              </Grid>\n              <Grid item>\n                <Skeleton variant='text' height={defaultHeight} width={20} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default UserCardSkeleton;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport UserCard from '../UserCard';\nimport UserCardSkeleton from '../UserCardSkeleton';\nimport Typography from '@material-ui/core/Typography';\n\nconst UserGroupCard = ({ loading, users = [], deleteItem, updateItem }) => {\n  return (\n    <>\n      {!loading ? (\n        <>\n          {users.length ? (\n            <Grid container spacing={3}>\n              {users.map((user) => (\n                <Grid item xs={12} key={user.id}>\n                  <UserCard\n                    {...user}\n                    deleteItem={() => deleteItem(user.id)}\n                    updateItem={(toSet) => updateItem(user.id, toSet)}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Typography>\n              Users list is empty\n            </Typography>\n          )}\n        </>\n      )\n        : (\n          <Grid container spacing={3}>\n            {Array(5).fill(null).map((a, i) => (\n              <Grid item xs={12} key={i}>\n                <UserCardSkeleton />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n    </>\n  );\n};\n\nexport default UserGroupCard;\n","import { gql } from 'apollo-boost';\n\nconst CREATER_USER = gql`\n  mutation createUser($user: CreateUserInput!) {\n    createUser(input: $user) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst getOpts = { limit: 100 };\n\nconst GET_USERS = gql`\n  query getUsers($skip: Int, $limit: Int) {\n    users(skip: $skip, limit: $limit) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst DELETE_USER = gql`\n  mutation deleteUser($id: ID!) {\n    deleteUser(id: $id) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst UPDATE_USER = gql`\n  mutation updateUser($id: ID!, $user: UpdateUserInput!) {\n    updateUser(id: $id, input: $user) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nexport {\n  CREATER_USER,\n  GET_USERS,\n  DELETE_USER,\n  UPDATE_USER,\n  getOpts\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport Paper from '@material-ui/core/Paper';\nimport Fade from '@material-ui/core/Fade';\nimport { styled } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport { CREATER_USER, GET_USERS, getOpts } from '../../../../queries';\nimport { validateEmail } from '../../../../helpers';\n\nconst ExpandBody = styled('div')({\n  display: 'flex',\n  marginLeft: '16px',\n  marginTop: '10px'\n});\n\nconst AddIconWrapper = styled('div')({\n  position: 'fixed',\n  bottom: '15vh',\n  right: '20vw'\n});\n\nconst defaultState = { name: '', email: '' };\n\nconst AddUser = ({ defaultShow }) => {\n  const [showCard, setShow] = useState(defaultShow);\n  const [store, setStore] = useState(defaultState);\n  const { name, email } = store;\n  const [createUser] = useMutation(CREATER_USER, {\n    update(cache, { data: { createUser: createdUser } }) {\n      const { users } = cache.readQuery({ query: GET_USERS, variables: getOpts });\n      cache.writeQuery({\n        query: GET_USERS,\n        data: { users: users.concat(createdUser) },\n        variables: getOpts\n      });\n    }\n  });\n  const nameInputRef = useRef();\n  const [{ name: nameError, email: emailError }, setErrors] = useState({});\n\n  useEffect(() => {\n    if (showCard && nameInputRef?.current) {\n      nameInputRef.current.focus();\n    }\n  }, [showCard]);\n\n  const validate = () => {\n    let error;\n\n    if (!name) {\n      error = true;\n      setErrors((prev) => ({ ...prev, name: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  const setShowCard = (flag) => {\n    setShow(flag);\n    if (!flag) {\n      setStore(defaultState);\n      setErrors({});\n    }\n  };\n\n  return (\n    <>\n      <AddIconWrapper>\n        <Fab color='primary' onClick={() => setShowCard(!showCard)}>\n          {showCard ? <ClearIcon /> : <AddIcon />}\n        </Fab>\n      </AddIconWrapper>\n      <Fade in={showCard}>\n        <Paper>\n          <Box p={2}>\n            <Grid container justify='space-between' alignItems='center'>\n              <Grid item>\n                <Grid container alignItems='center'>\n                  <Box mr={2} />\n                  <Grid item>\n                    <Grid container direction='row' alignItems='center' spacing={1}>\n                      <Grid item>\n                        Name:\n                      </Grid>\n                      <Grid item>\n                        <TextField\n                          required\n                          value={name}\n                          onChange={({ target: { value } }) => {\n                            setStore({ ...store, name: value });\n                            setErrors((prev) => ({ ...prev, name: null }));\n                          }}\n                          inputRef={nameInputRef}\n                          error={nameError?.error}\n                        />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container direction='row' spacing={2}>\n                  <Grid item>\n                    <IconButton\n                      size='small'\n                      onClick={() => {\n                        setShowCard(false);\n                      }}\n                    >\n                      <ClearIcon fontSize='small' />\n                    </IconButton>\n                  </Grid>\n                  <Grid item>\n                    <IconButton\n                      size='small'\n                      onClick={() => {\n                        if (validate()) {\n                          setShowCard(false);\n                          createUser({ variables: { user: { name, email } } });\n                        }\n                      }}\n                    >\n                      <CheckIcon fontSize='small' />\n                    </IconButton>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <ExpandBody>\n              <Grid container direction='row' alignItems='center' spacing={1}>\n                <Grid item>\n                  User email:\n                </Grid>\n                <Grid item>\n                  <TextField\n                    required\n                    value={email}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, email: value });\n                      setErrors((prev) => ({ ...prev, email: null }));\n                    }}\n                    error={emailError?.error}\n                  />\n                </Grid>\n              </Grid>\n            </ExpandBody>\n          </Box>\n        </Paper>\n      </Fade>\n    </>\n  );\n};\n\nexport default AddUser;\n","const constants = {\n  TOKEN_STORAGE_KEY: 'token',\n  API_ENDPOINT: 'https://ruvodtest.herokuapp.com',\n  GITHUB_CLIENT_ID: '5244b7cfe39a6d040d6d',\n  ROUTING_SUBPATH: '/ruvod-test'\n};\n\nexport default constants;\n","import React, { useState, createContext } from 'react';\nimport axios from 'axios';\nimport constants from '../../config';\n\nconst { API_ENDPOINT } = constants;\n\nexport const AuthContext = createContext();\n\nexport const useAuthClient = (defaultState = {}) => {\n  const [state, set] = useState(defaultState);\n\n  const setState = (...args) => set(...args);\n\n  setState.fetch = async () => {\n    try {\n      setState({ ...state, loading: true });\n      const { data: client } = await axios.get(`${API_ENDPOINT}/auth`, {\n        withCredentials: true\n      });\n\n      setState({ client });\n    } catch (e) {\n      setState({ error: true, notAuthorized: true });\n    }\n  };\n\n  return [state, setState];\n};\n\nexport const withAuth = (Component) => {\n  return (props) => (\n    <AuthContext.Consumer>\n      {(value) => <Component {...props} useAuth={value} />}\n    </AuthContext.Consumer>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { styled } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport { UserGroupCard, AddUser } from './components';\nimport { GET_USERS, DELETE_USER, UPDATE_USER, getOpts } from '../../queries';\nimport { withAuth } from '../AuthClient';\nimport { Redirect } from 'react-router-dom';\nimport constants from '../../config';\n\nconst { ROUTING_SUBPATH } = constants;\n\nconst Wrapper = styled(Box)({\n  overflowY: 'scroll',\n  display: 'flex',\n  flex: '1'\n});\n\nconst Home = ({ useAuth }) => {\n  const { loading, data, refetch } = useQuery(GET_USERS, { variables: getOpts });\n  const [deleteUser] = useMutation(DELETE_USER, {\n    update(cache, { data: { deleteUser: deletedUser } }) {\n      const { users } = cache.readQuery({ query: GET_USERS, variables: getOpts });\n      cache.writeQuery({\n        query: GET_USERS,\n        data: { users: users.filter(({ id }) => id !== deletedUser?.id) },\n        variables: getOpts\n      });\n    }\n  });\n  const [updateUser] = useMutation(UPDATE_USER);\n  const [store] = useAuth();\n\n  useEffect(() => {\n    if (store?.refetch) {\n      refetch({ variables: getOpts });\n    }\n  }, []);\n\n  return (\n    <Wrapper pt={2} mb={2}>\n      {store?.notAuthorized ? <Redirect to={`${ROUTING_SUBPATH}/login`} /> : null}\n      <Container maxWidth='sm'>\n        <UserGroupCard\n          users={data?.users}\n          loading={loading}\n          deleteItem={(id) => deleteUser({ variables: { id } })}\n          updateItem={(id, user = {}) => updateUser({ variables: { id, user } })}\n        />\n        <Box mt={3}>\n          <AddUser />\n        </Box>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default withAuth(Home);\n","import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { withAuth } from '../AuthClient';\nimport constants from '../../config';\nimport axios from 'axios';\n\nconst { API_ENDPOINT, ROUTING_SUBPATH } = constants;\n\nconst WhiteIconButton = styled(IconButton)({\n  color: '#FFF',\n});\n\nconst NavButton = styled(Button)({\n  color: '#FFF',\n  minHeight: '64px',\n  textTransform: 'none',\n  borderRadius: 0,\n  fontSize: '16px'\n});\n\nconst ToolbarGrid = styled(Grid)({\n  minHeight: '64px'\n});\n\nconst Header = ({ useAuth }) => {\n  const [{ client, error, notAuthorized } = {}, setAuth] = useAuth();\n\n  return (\n    <>\n      {error || notAuthorized ? <Redirect to={`${ROUTING_SUBPATH}/login`} /> : null}\n      <div style={{ height: '64px' }} />\n      <AppBar position='fixed'>\n        <Toolbar disableGutters>\n          <Container maxWidth='md'>\n            <ToolbarGrid container justify='space-between' alignItems='center'>\n              <Grid item>\n                <Link to={`${ROUTING_SUBPATH}/`}>\n                  <NavButton>\n                    Home\n                  </NavButton>\n                </Link>\n              </Grid>\n              <Grid item>\n                {client ? (\n                  <Grid container alignItems='center' spacing={2}>\n                    <Grid item>\n                      <div>{client?.name ? `Hi, ${client.name}` : 'Hi, user'}</div>\n                    </Grid>\n                    <Grid item>\n                      <WhiteIconButton\n                        onClick={async () => {\n                          await axios.get(`${API_ENDPOINT}/logout`, { withCredentials: true });\n                          setAuth(({ client: _, ...rest }) => ({ ...rest, notAuthorized: true }));\n                        }}\n                      >\n                        <ExitToAppIcon />\n                      </WhiteIconButton>\n                    </Grid>\n                  </Grid>\n                ) : (\n                  <Link to={`${ROUTING_SUBPATH}/login`}>\n                    <WhiteIconButton>\n                      <AccountCircleIcon />\n                    </WhiteIconButton>\n                  </Link>\n                )}\n              </Grid>\n            </ToolbarGrid>\n          </Container>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default withAuth(Header);\n","export function toParams(query) {\n  const q = query.replace(/^\\??\\//, '');\n\n  return q.split('&').reduce((values, param) => {\n    const [key, value] = param.split('=');\n\n    values[key] = value;  //eslint-disable-line\n\n    return values;\n  }, {});\n}\n\nexport function toQuery(params, delimiter = '&') {\n  const keys = Object.keys(params);\n\n  return keys.reduce((str, key, index) => {\n    let query = `${str}${key}=${params[key]}`;\n\n    if (index < (keys.length - 1)) {\n      query += delimiter;\n    }\n\n    return query;\n  }, '');\n}\n","import { toParams, toQuery } from './utils';\n\nclass PopupWindow {\n  constructor(id, url, options = {}) {\n    this.id = id;\n    this.url = url;\n    this.options = options;\n  }\n\n  open() {\n    const { url, id, options } = this;\n\n    this.window = window.open(url, id, toQuery(options, ','));\n  }\n\n  close() {\n    this.cancel();\n    this.window.close();\n  }\n\n  poll() {\n    this.promise = new Promise((resolve, reject) => {\n      this._iid = window.setInterval(() => {  //eslint-disable-line\n        try {\n          const popup = this.window;\n\n          if (!popup || popup.closed !== false) {\n            this.close();\n\n            reject(new Error('The popup was closed'));\n\n            return;\n          }\n\n          if (popup.location.href === this.url || popup.location.pathname === 'blank') {\n            return;\n          }\n\n          const params = toParams(popup.location.search.replace(/^\\?/, ''));\n\n          resolve(params);\n\n          this.close();\n        } catch (error) {\n          /*\n           * Ignore DOMException: Blocked a frame with origin from accessing a\n           * cross-origin frame.\n           */\n        }\n      }, 500);\n    });\n  }\n\n  cancel() {\n    if (this._iid) {  //eslint-disable-line\n      window.clearInterval(this._iid);  //eslint-disable-line\n      this._iid = null; //eslint-disable-line\n    }\n  }\n\n  then(...args) {\n    return this.promise.then(...args);\n  }\n\n  catch(...args) {\n    return this.promise.then(...args);\n  }\n\n  static open(...args) {\n    const popup = new this(...args);\n\n    popup.open();\n    popup.poll();\n\n    return popup;\n  }\n}\n\nexport default PopupWindow;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport PopupWindow from './PopupWindow';\nimport { toQuery } from './utils';\n\nclass GitHubLogin extends Component {\n  static propTypes = {\n    buttonText: PropTypes.string,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    clientId: PropTypes.string.isRequired,\n    onRequest: PropTypes.func,\n    onSuccess: PropTypes.func,\n    onFailure: PropTypes.func,\n    redirectUri: PropTypes.string.isRequired,\n    scope: PropTypes.string,\n  }\n\n  static defaultProps = {\n    buttonText: 'Sign in with GitHub',\n    scope: 'user:email',\n    onRequest: () => {},\n    onSuccess: () => {},\n    onFailure: () => {},\n  }\n\n  onBtnClick = () => {\n    const { clientId, scope, redirectUri } = this.props;\n    const search = toQuery({\n      client_id: clientId,\n      scope,\n      redirect_uri: redirectUri,\n    });\n    const popup = this.popup = PopupWindow.open(\n      'github-oauth-authorize',\n      `https://github.com/login/oauth/authorize?${search}`,\n      { height: 1000, width: 600 }\n    );\n\n    this.onRequest();\n    popup.then(\n      data => this.onSuccess(data),\n      error => this.onFailure(error)\n    );\n  }\n\n  onRequest = () => {\n    this.props.onRequest();\n  }\n\n  onSuccess = (data) => {\n    if (!data.code) {\n      return this.onFailure(new Error('\\'code\\' not found'));\n    }\n\n    this.props.onSuccess(data);\n  }\n\n  onFailure = (error) => {\n    this.props.onFailure(error);\n  }\n\n  render() {\n    const { className, buttonText, children } = this.props;\n    const attrs = { onClick: this.onBtnClick };\n\n    if (className) {\n      attrs.className = className;\n    }\n\n    return <div {...attrs}>{ children || buttonText }</div>;\n  }\n}\n\nexport default GitHubLogin;\n","import React, { useEffect } from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport GitHubLogin from './GitHubLogin';  //eslint-disable-line\nimport constants from '../../../config';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { withAuth } from '../../AuthClient';\n\nconst { GITHUB_CLIENT_ID } = constants;\n\nconst AuthIconButton = styled(IconButton)(({ theme, active }) => ({\n  color: active ? theme.palette.primary.main : '#000'\n}));\n\nconst LayoutGrid = ({ children, ...props }) => (\n  <Grid {...props}>\n    {React.Children.map(children, (child, i) => (\n      <Grid item key={i}>\n        {child}\n      </Grid>\n    ))}\n  </Grid>\n);\n\nconst GitHub = ({ active, type, setAuthControls, setRedirect, useAuth, onClick }) => {\n  const [, setAuth] = useAuth();\n\n  useEffect(() => {\n    if (active) {\n      setAuthControls && setAuthControls({ element: (\n        <LayoutGrid container spacing={2} direction='column'>\n          <Typography>Follow the open window</Typography>\n          <LayoutGrid container spacing={2} direction='column'>\n            <Button variant='outlined' onClick={() => onClick && onClick()}>Cancel</Button>\n          </LayoutGrid>\n        </LayoutGrid>\n      ) });\n    }\n    return () => setAuthControls && setAuthControls(null);\n  }, [active]);\n\n  return (\n    <GitHubLogin\n      clientId={GITHUB_CLIENT_ID}\n    >\n      <AuthIconButton\n        active={active}\n        onClick={(e) => {\n          if (active) e.stopPropagation();\n          onClick && onClick();\n        }}\n        onSuccess={(...args) => {\n          console.log('github args', ...args);\n        }}\n        onFailure={(...args) => {\n          console.log('github args', ...args);\n        }}\n      >\n        <GitHubIcon />\n      </AuthIconButton>\n    </GitHubLogin>\n  );\n};\n\nexport default withAuth(GitHub);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport VpnKeyOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\nimport axios from 'axios';\nimport Client from 'webauthn/client';\nimport { validateEmail } from '../../../helpers';\nimport constants from '../../../config';\nimport { withAuth } from '../../AuthClient';\n\nconst { API_ENDPOINT } = constants;\n\nconst webAuthClient = new Client({ pathPrefix: `${API_ENDPOINT}/webauthn` });\n\nconst AuthIconButton = styled(IconButton)(({ theme, active }) => ({\n  color: active ? theme.palette.primary.main : '#000'\n}));\n\nconst FullWidthTextField = styled(TextField)({\n  width: '100%'\n});\n\nconst LayoutGrid = ({ children, ...props }) => (\n  <Grid {...props}>\n    {React.Children.map(children, (child, i) => (\n      <Grid item key={i}>\n        {child}\n      </Grid>\n    ))}\n  </Grid>\n);\n\nconst Login = withAuth(({ onCancel, useAuth, setRedirect }) => {\n  const [, setAuth] = useAuth();\n  const [store, setStore] = useState({ password: '', email: '' });\n  const { password, email } = store;\n  const emailInputRef = useRef();\n  const [{ email: emailError }, setErrors] = useState({});\n\n  useEffect(() => {\n    if (emailInputRef?.current) {\n      emailInputRef.current.focus();\n    }\n  }, [emailInputRef]);\n\n  const validate = () => {\n    let error;\n\n    if (!password) {\n      error = true;\n      setErrors((prev) => ({ ...prev, password: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  return (\n    <LayoutGrid container spacing={2} direction='column'>\n      <LayoutGrid container spacing={2} direction='column'>\n        <FullWidthTextField\n          required\n          variant='outlined'\n          type='email'\n          size='small'\n          value={email}\n          onChange={({ target: { value } }) => {\n            setStore({ ...store, email: value });\n            setErrors((prev) => ({ ...prev, email: null }));\n          }}\n          inputRef={emailInputRef}\n          error={emailError?.error}\n          label={emailError?.label || 'Email'}\n        />\n      </LayoutGrid>\n      <LayoutGrid container justify='space-between'>\n        <Button variant='outlined' onClick={onCancel}>Cancel</Button>\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={async () => {\n            if (validate()) {\n              try {\n                await webAuthClient.login({\n                  username: email,\n                });\n                const { client } = await axios.get(`${API_ENDPOINT}/auth/webauthn`, {\n                  withCredentials: true\n                });\n\n                setAuth({ client, refetch: true });\n                setRedirect(true);\n              } catch (e) {\n                console.log(`register failed ${e}`);\n              }\n            }\n          }}\n        >\n          Login\n        </Button>\n      </LayoutGrid>\n    </LayoutGrid>\n  );\n});\n\nconst Registration = withAuth(({ onCancel, useAuth, setRedirect }) => {\n  const [, setAuth] = useAuth();\n  const [store, setStore] = useState({ name: '', email: '' });\n  const { name, email } = store;\n  const nameInputRef = useRef();\n  const [{ email: emailError, name: nameError }, setErrors] = useState({});\n\n  useEffect(() => {\n    if (nameInputRef?.current) {\n      nameInputRef.current.focus();\n    }\n  }, [nameInputRef]);\n\n  const validate = () => {\n    let error;\n\n    if (!name) {\n      error = true;\n      setErrors((prev) => ({ ...prev, name: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  return (\n    <LayoutGrid container spacing={2} direction='column'>\n      <LayoutGrid container spacing={2} direction='column'>\n        <FullWidthTextField\n          required\n          variant='outlined'\n          type='name'\n          size='small'\n          value={name}\n          onChange={({ target: { value } }) => {\n            setStore({ ...store, name: value });\n            setErrors((prev) => ({ ...prev, name: null }));\n          }}\n          inputRef={nameInputRef}\n          error={nameError?.error}\n          label={nameError?.label || 'Name'}\n        />\n        <FullWidthTextField\n          required\n          variant='outlined'\n          type='email'\n          size='small'\n          value={email}\n          onChange={({ target: { value } }) => {\n            setStore({ ...store, email: value });\n            setErrors((prev) => ({ ...prev, email: null }));\n          }}\n          error={emailError?.error}\n          label={emailError?.label || 'Email'}\n        />\n      </LayoutGrid>\n      <LayoutGrid container justify='space-between'>\n        <Button variant='outlined' onClick={onCancel}>Cancel</Button>\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={async () => {\n            if (validate()) {\n              try {\n                await webAuthClient.register({\n                  username: email,\n                  name\n                });\n                const { client } = await axios.get(`${API_ENDPOINT}/auth/webauthn`, {\n                  withCredentials: true\n                });\n\n                setAuth({ client, refetch: true });\n                setRedirect(true);\n              } catch (e) {\n                console.log(`register failed ${e}`);\n              }\n            }\n          }}\n        >\n          Registration\n        </Button>\n      </LayoutGrid>\n    </LayoutGrid>\n  );\n});\n\nconst WebAuthn = ({ setAuthControls, active, onClick, type, setRedirect }) => {\n  useEffect(() => {\n    if (active) {\n      let component;\n      switch (type) {\n        case 'login': {\n          component = { element: <Login onCancel={() => onClick && onClick()} setRedirect={setRedirect} /> };\n          break;\n        }\n        case 'registration': {\n          component = { element: <Registration onCancel={() => onClick && onClick()} setRedirect={setRedirect} /> };\n          break;\n        }\n        default: {}\n      }\n      setAuthControls && setAuthControls(component || null);\n    }\n    return () => setAuthControls && setAuthControls(null);\n  }, [active, type]);\n\n  return (\n    <AuthIconButton\n      active={active}\n      onClick={() => {\n        onClick && onClick();\n      }}\n    >\n      <VpnKeyOutlinedIcon />\n    </AuthIconButton>\n  );\n};\n\nexport default WebAuthn;\n","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport GitHub from './GitHub';\nimport WebAuthn from './WebAuthn';\n\nconst LayoutGrid = ({ children, itemProps = {}, value, onSelect, ...props }) => (\n  <Grid {...props}>\n    {children.map((child, i) => (\n      <Grid item key={i}>\n        {React.cloneElement(child, { active: (i === value), onClick: () => onSelect(i), ...itemProps })}\n      </Grid>\n    ))}\n  </Grid>\n);\n\nconst Autorizations = ({ type, setAuthControls, setRedirect }) => {\n  const [value, setValue] = useState();\n\n  return (\n    <LayoutGrid\n      container\n      justify='center'\n      spacing={1}\n      onSelect={(i) => setValue(i === value ? null : i)}\n      value={value}\n      itemProps={{\n        type,\n        setAuthControls,\n        setRedirect\n      }}\n    >\n      <GitHub />\n      <WebAuthn />\n    </LayoutGrid>\n  );\n};\n\nexport default Autorizations;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Autorizations from '../Autorizations';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { validateEmail } from '../../helpers';\nimport axios from 'axios';\nimport constants from '../../config';\nimport { withAuth } from '../AuthClient';\n\nconst { API_ENDPOINT, ROUTING_SUBPATH } = constants;\n\nconst LayoutGrid = ({ children, ...props }) => (\n  <Grid {...props}>\n    {React.Children.map(children, (child, i) => (\n      <Grid item key={i}>\n        {child}\n      </Grid>\n    ))}\n  </Grid>\n);\n\nconst RegistratoinContainer = styled(Container)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  width: '350px',\n  [theme.breakpoints.down('md')]: {\n    width: '350px'\n  },\n  [theme.breakpoints.down('sm')]: {\n    width: '300px'\n  }\n}));\n\nconst TitleTypography = styled(Typography)(({ theme }) => ({\n  marginBottom: theme.spacing(6)\n}));\n\nconst FullWidthTextField = styled(TextField)({\n  width: '100%'\n});\n\nconst Registration = ({ useAuth }) => {\n  const [, setAuth] = useAuth();\n  const [redirect, setRedirect] = useState();\n  const [store, setStore] = useState({ name: '', email: '', password: '' });\n  const { name, email, password } = store;\n  const nameInputRef = useRef();\n  const [{ name: nameError, email: emailError, password: passwordError }, setErrors] = useState({});\n  const [authControls, setAuthControls] = useState();\n\n  useEffect(() => {\n    if (nameInputRef?.current) {\n      nameInputRef.current.focus();\n    }\n  }, [nameInputRef]);\n\n  const validate = () => {\n    let error;\n\n    if (!name) {\n      error = true;\n      setErrors((prev) => ({ ...prev, name: { label: 'Required', error: true } }));\n    }\n    if (!password) {\n      error = true;\n      setErrors((prev) => ({ ...prev, password: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  return (\n    <RegistratoinContainer>\n      {redirect ? <Redirect to='/' /> : null}\n      <Paper>\n        <Box p={2}>\n          <LayoutGrid container justify='center' spacing={2} direction='column'>\n            <TitleTypography variant='h6'>\n              Registration\n            </TitleTypography>\n            <Autorizations type='registration' setAuthControls={setAuthControls} setRedirect={setRedirect} />\n            {authControls ? authControls?.element : (\n              <LayoutGrid container justify='center' spacing={2} direction='column'>\n                <LayoutGrid container spacing={2} direction='column'>\n                  <FullWidthTextField\n                    required\n                    variant='outlined'\n                    size='small'\n                    value={name}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, name: value });\n                      setErrors((prev) => ({ ...prev, name: null }));\n                    }}\n                    inputRef={nameInputRef}\n                    error={nameError?.error}\n                    label={nameError?.label || 'Name'}\n                  />\n                  <FullWidthTextField\n                    required\n                    variant='outlined'\n                    type='email'\n                    size='small'\n                    value={email}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, email: value });\n                      setErrors((prev) => ({ ...prev, email: null }));\n                    }}\n                    error={emailError?.error}\n                    label={emailError?.label || 'Email'}\n                  />\n                  <FullWidthTextField\n                    required\n                    variant='outlined'\n                    type='password'\n                    size='small'\n                    value={password}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, password: value });\n                      setErrors((prev) => ({ ...prev, password: null }));\n                    }}\n                    error={passwordError?.error}\n                    label={passwordError?.label || 'Password'}\n                  />\n                </LayoutGrid>\n                <LayoutGrid container justify='space-between'>\n                  <Link to={`${ROUTING_SUBPATH}/login`}>\n                    <Button variant='outlined'>Login</Button>\n                  </Link>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={() => {\n                      if (validate()) {\n                        axios.post(`${API_ENDPOINT}/createClient`, { email, password, name }, {\n                          withCredentials: true\n                        })\n                          .then(({ data: { client } }) => {\n                            setAuth({ client });\n                            setRedirect(true);\n                          })\n                          .catch(() => {\n                            setErrors({ password: { error: true }, email: { error: true }, name: { error: true } });\n                          });\n                      }\n                    }}\n                  >\n                    Registration\n                  </Button>\n                </LayoutGrid>\n              </LayoutGrid>\n            )}\n          </LayoutGrid>\n        </Box>\n      </Paper>\n    </RegistratoinContainer>\n  );\n};\n\nexport default withAuth(Registration);\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Autorizations from '../Autorizations';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { validateEmail } from '../../helpers';\nimport axios from 'axios';\nimport constants from '../../config';\nimport { withAuth } from '../AuthClient';\n\nconst { API_ENDPOINT, ROUTING_SUBPATH } = constants;\n\nconst LayoutGrid = ({ children, ...props }) => (\n  <Grid {...props}>\n    {React.Children.map(children, (child, i) => (\n      <Grid item key={i}>\n        {child}\n      </Grid>\n    ))}\n  </Grid>\n);\n\nconst RegistratoinContainer = styled(Container)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  width: '350px',\n  [theme.breakpoints.down('md')]: {\n    width: '350px'\n  },\n  [theme.breakpoints.down('sm')]: {\n    width: '300px'\n  }\n}));\n\nconst TitleTypography = styled(Typography)(({ theme }) => ({\n  marginBottom: theme.spacing(6)\n}));\n\nconst FullWidthTextField = styled(TextField)({\n  width: '100%'\n});\n\nconst Login = ({ useAuth }) => {\n  const [, setAuth] = useAuth();\n  const [redirect, setRedirect] = useState();\n  const [store, setStore] = useState({ password: '', email: '' });\n  const { password, email } = store;\n  const emailInputRef = useRef();\n  const [{ password: passwordError, email: emailError }, setErrors] = useState({});\n  const [authControls, setAuthControls] = useState();\n\n  useEffect(() => {\n    if (emailInputRef?.current) {\n      emailInputRef.current.focus();\n    }\n  }, [emailInputRef]);\n\n  const validate = () => {\n    let error;\n\n    if (!password) {\n      error = true;\n      setErrors((prev) => ({ ...prev, password: { label: 'Required', error: true } }));\n    }\n    if (!validateEmail(email)) {\n      error = true;\n      setErrors((prev) => ({ ...prev, email: { label: 'Is not a valid email', error: true } }));\n    }\n\n    return !error;\n  };\n\n  return (\n    <RegistratoinContainer>\n      {redirect ? <Redirect to='/' /> : null}\n      <Paper>\n        <Box p={2}>\n          <LayoutGrid container justify='center' spacing={2} direction='column'>\n            <TitleTypography variant='h6'>\n              Login\n            </TitleTypography>\n            <Autorizations type='login' setAuthControls={setAuthControls} setRedirect={setRedirect} />\n            {authControls ? authControls?.element : (\n              <LayoutGrid container justify='center' spacing={2} direction='column'>\n                <LayoutGrid container spacing={2} direction='column'>\n                  <FullWidthTextField\n                    required\n                    variant='outlined'\n                    type='email'\n                    size='small'\n                    value={email}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, email: value });\n                      setErrors((prev) => ({ ...prev, email: null }));\n                    }}\n                    inputRef={emailInputRef}\n                    error={emailError?.error}\n                    label={emailError?.label || 'Email'}\n                  />\n                  <FullWidthTextField\n                    required\n                    type='password'\n                    variant='outlined'\n                    size='small'\n                    value={password}\n                    onChange={({ target: { value } }) => {\n                      setStore({ ...store, password: value });\n                      setErrors((prev) => ({ ...prev, password: null }));\n                    }}\n                    error={passwordError?.error}\n                    label={passwordError?.label || 'Password'}\n                  />\n                </LayoutGrid>\n                <LayoutGrid container justify='space-between'>\n                  <Link to={`${ROUTING_SUBPATH}/registration`}>\n                    <Button variant='outlined' href='registration'>Registration</Button>\n                  </Link>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={() => {\n                      if (validate()) {\n                        axios.post(`${API_ENDPOINT}/auth`, { email, password }, {\n                          withCredentials: true\n                        })\n                          .then(({ data: { client } }) => {\n                            setAuth({ client, refetch: true });\n                            setRedirect(true);\n                          })\n                          .catch(() => {\n                            setErrors({ password: { error: true }, email: { error: true } });\n                          });\n                      }\n                    }}\n                  >\n                    Login\n                  </Button>\n                </LayoutGrid>\n              </LayoutGrid>\n            )}\n          </LayoutGrid>\n        </Box>\n      </Paper>\n    </RegistratoinContainer>\n  );\n};\n\nexport default withAuth(Login);\n","import React, { useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { styled } from '@material-ui/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Home, Header, Registration, Login, AuthContext, useAuthClient } from './components';\nimport constants from './config';\nimport './App.css';\n\nconst { ROUTING_SUBPATH } = constants;\n\nconst ProgressWrapper = styled('div')({\n  display: 'flex',\n  flex: '1',\n  justifyContent: 'center',\n  alignItems: 'center'\n});\n\nconst App = () => {\n  const [state, setState] = useAuthClient({ loading: true });\n\n  useEffect(() => {\n    setState.fetch();\n  }, []);\n\n  return (\n    <AuthContext.Provider value={() => ([state, setState])}>\n      {state?.loading ? (\n        <ProgressWrapper>\n          <CircularProgress />\n        </ProgressWrapper>\n      ) : (\n        <div className='App'>\n          <Router>\n            <Header />\n            <Switch>\n              <Route exact path={`${ROUTING_SUBPATH}/`}>\n                <Home />\n              </Route>\n              <Route path={`${ROUTING_SUBPATH}/registration`}>\n                <Registration />\n              </Route>\n              <Route path={`${ROUTING_SUBPATH}/login`}>\n                <Login />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport ApolloClient from 'apollo-boost';\n// import { HttpLink, createHttpLink  } from 'apollo-link-http';\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4010/graphql',\n  credentials: 'include',\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}